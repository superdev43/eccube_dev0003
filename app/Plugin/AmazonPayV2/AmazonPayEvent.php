<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.3   |
    |              on 2021-07-20 10:45:26              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
namespace Plugin\AmazonPayV2;use Eccube\Event\TemplateEvent;use Eccube\Event\EventArgs;use Eccube\Event\EccubeEvents;use Eccube\Common\EccubeConfig;use Eccube\Repository\PaymentRepository;use Eccube\Repository\PluginRepository;use Eccube\Service\OrderHelper;use Eccube\Service\CartService;use Plugin\AmazonPayV2\Repository\ConfigRepository;use Plugin\AmazonPayV2\Service\AmazonRequestService;use Plugin\AmazonPayV2\Service\Method\AmazonPay;use Plugin\AmazonPayV2\phpseclib\Crypt\Random;use Symfony\Component\DependencyInjection\ContainerInterface;use Symfony\Component\EventDispatcher\EventSubscriberInterface;use Symfony\Component\HttpFoundation\RequestStack;use Symfony\Component\HttpFoundation\Session\SessionInterface;use Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface;use Symfony\Component\Routing\Generator\UrlGeneratorInterface;use Eccube\Repository\DeliveryRepository;use Eccube\Repository\PaymentOptionRepository;class AmazonPayEvent implements EventSubscriberInterface{private $sessionAmazonProfileKey = 'amazon_pay_v2.profile';private $sessionAmazonCheckoutSessionIdKey = 'amazon_pay_v2.checkout_session_id';private $sessionAmazonLoginStateKey = 'amazon_pay_v2.amazon_login_state';protected $eccubeConfig;private $router;protected $configRepository;protected $amazonRequestService;protected $deliveryRepository;protected $paymentOptionRepository;public function __construct(RequestStack $requestStack, SessionInterface $session, TokenStorageInterface $tokenStorage, EccubeConfig $eccubeConfig, UrlGeneratorInterface $router, PaymentRepository $paymentRepository, PluginRepository $pluginRepository, ConfigRepository $configRepository, ContainerInterface $container, OrderHelper $orderHelper, CartService $cartService, AmazonRequestService $amazonRequestService, DeliveryRepository $deliveryRepository, PaymentOptionRepository $paymentOptionRepository){goto Baxzf;Pjpj1:$this->deliveryRepository = $deliveryRepository;goto hd3qS;ty5wV:$this->tokenStorage = $tokenStorage;goto PGOoQ;PGOoQ:$this->eccubeConfig = $eccubeConfig;goto loP10;THa2b:$this->amazonRequestService = $amazonRequestService;goto Pjpj1;Baxzf:$this->requestStack = $requestStack;goto bha20;loP10:$this->router = $router;goto afvZ6;D4nZb:$this->cartService = $cartService;goto THa2b;bha20:$this->session = $session;goto ty5wV;IaWpm:$this->configRepository = $configRepository;goto xfgo_;suepg:$this->orderHelper = $orderHelper;goto D4nZb;ezzr2:$this->pluginRepository = $pluginRepository;goto IaWpm;afvZ6:$this->paymentRepository = $paymentRepository;goto ezzr2;hd3qS:$this->paymentOptionRepository = $paymentOptionRepository;goto aWAYq;xfgo_:$this->container = $container;goto suepg;aWAYq:}public static function getSubscribedEvents(){return [EccubeEvents::FRONT_CART_BUYSTEP_COMPLETE => 'amazon_cart_buystep', 'Cart/index.twig' => 'cart', 'Shopping/index.twig' => 'amazon_pay_shopping', 'Mypage/login.twig' => 'mypage_login', 'Shopping/confirm.twig' => 'amazon_pay_shopping_confirm'];}public function cart(TemplateEvent $event){goto nLWGH;DO2f5:return;goto CAUQx;oKO7k:foreach ($AmazonDeliveries as $AmazonDelivery) {goto Jdjnq;Jdjnq:$Delivery = $this->deliveryRepository->findOneBy(['id' => $AmazonDelivery->getDelivery()->getId()]);goto HCDiY;HCDiY:$AmazonSaleTypes[] = $Delivery->getSaleType()->getId();goto O3sk0;O3sk0:wUTLw:goto lt1PV;lt1PV:}goto HCz2b;eKc1K:$Payment = $this->paymentRepository->findOneBy(['method_class' => AmazonPay::class]);goto pR8Ia;SwL0E:$parameters['AmazonPayV2Api'] = $this->eccubeConfig['amazon_pay_v2']['api']['prod'];goto LOC3Q;QNBR2:if (!($Config->getUseCartButton() == $this->eccubeConfig['amazon_pay_v2']['toggle']['off'])) {goto CgL5S;}goto cQjin;cQjin:return;goto tzMe0;tuNr9:$event->setParameters($parameters);goto ATN1r;ql7IL:WRUMG:goto SwL0E;LOC3Q:Rfh1d:goto tuNr9;Se3cd:goto Rfh1d;goto ql7IL;tzMe0:CgL5S:goto eKc1K;V9Yln:$parameters['AmazonPayV2Config'] = $Config;goto jmKf6;giQq6:$parameters['AmazonPayV2Api'] = $this->eccubeConfig['amazon_pay_v2']['api']['sandbox'];goto Se3cd;xwrOJ:$parameters['AmazonSaleTypes'] = $AmazonSaleTypes;goto GSN4D;jmKf6:if ($Config->getEnv() == $this->eccubeConfig['amazon_pay_v2']['env']['prod']) {goto WRUMG;}goto giQq6;nLWGH:$parameters = $event->getParameters();goto e0wba;L1OZO:R_61x:goto V9Yln;mtTB5:qXR4Q:goto z9OvI;HCz2b:jK2dn:goto xwrOJ;YM1yy:$event->addSnippet('@AmazonPayV2/default/Cart/button.twig');goto mtTB5;c4BBq:$AmazonSaleTypes = [];goto oKO7k;e0wba:if (!empty($parameters['Carts'])) {goto jYdbI;}goto DO2f5;pR8Ia:$AmazonDeliveries = $this->paymentOptionRepository->findBy(['payment_id' => $Payment->getId()]);goto c4BBq;OThGg:if (!($Config->getCartButtonPlace() == $this->eccubeConfig['amazon_pay_v2']['button_place']['auto'])) {goto qXR4Q;}goto YM1yy;ATN1r:$event->addSnippet('@AmazonPayV2/default/Cart/amazon_pay_js.twig');goto OThGg;CAUQx:jYdbI:goto Op1PB;GSN4D:foreach ($parameters['Carts'] as $Cart) {goto CXyYO;T1lGv:$parameters['cart'][$cartKey]['signature'] = $signature;goto FzgMh;WKziN:$signature = $this->amazonRequestService->signaturePayload($payload);goto e3U8n;CXyYO:$cartKey = $Cart->getCartKey();goto iOlCx;FzgMh:r13lv:goto dicWU;e3U8n:$parameters['cart'][$cartKey]['payload'] = $payload;goto T1lGv;iOlCx:$payload = $this->amazonRequestService->createCheckoutSessionPayload($Cart->getCartKey());goto WKziN;dicWU:}goto L1OZO;Op1PB:$Config = $this->configRepository->get();goto QNBR2;z9OvI:}public function amazon_cart_buystep(EventArgs $event){goto U1IkD;BEyvh:$this->cartService->setPreOrderId(null);goto ANZE0;U1IkD:if (!($this->orderHelper->getNonmember() && $this->session->get($this->sessionAmazonProfileKey))) {goto sLnwz;}goto Y4rW3;Y4rW3:$this->session->remove(OrderHelper::SESSION_NON_MEMBER);goto vn3iT;vn3iT:$this->session->remove($this->sessionAmazonProfileKey);goto BEyvh;ANZE0:$this->cartService->save();goto PAABn;PAABn:sLnwz:goto yMfNc;yMfNc:}public function amazon_pay_shopping(TemplateEvent $event){goto JQE2p;fkRGI:$Payment = $Order->getPayment();goto J_e0r;JQE2p:$request = $this->requestStack->getMasterRequest();goto ApgV1;K7OUV:$useMailMagazine = true;goto Mc3W9;iXaYo:$parameters['amazonCheckoutSessionId'] = $amazonCheckoutSessionId;goto K6k0x;C5lSv:$parameters['useMailMagazine'] = $useMailMagazine;goto hcOkd;qAyUf:$parameters['AmazonPayV2Api'] = $this->eccubeConfig['amazon_pay_v2']['api']['sandbox'];goto hjX5h;YzeoQ:$Config = $this->configRepository->get();goto eNanT;bGWx4:dXikc:goto voK9e;j68eZ:$Order = $parameters['Order'];goto fkRGI;uaZBZ:if ($this->pluginRepository->findOneBy(['code' => 'MailMagazine4', 'enabled' => true]) || $this->pluginRepository->findOneBy(['code' => 'PostCarrier4', 'enabled' => true])) {goto iTtJt;}goto UoOsG;Q0Tjp:HnFsF:goto qpLiC;voK9e:$parameters['AmazonPayV2Api'] = $this->eccubeConfig['amazon_pay_v2']['api']['prod'];goto MQKk6;UF4HQ:if (!(preg_match('/shopping\\/amazon_pay/', $uri) == false)) {goto sjNUn;}goto jrf1m;YldI2:iTtJt:goto K7OUV;MnTth:$amazonCheckoutSessionId = $this->session->get($this->sessionAmazonCheckoutSessionIdKey);goto TEOcd;u0Slh:$event->setParameters($parameters);goto birXT;otqQS:header("Location:" . $this->container->get('router')->generate('amazon_pay_shopping'));goto tSShw;UoOsG:$useMailMagazine = false;goto I2l2v;eo5Wb:sjNUn:goto YzeoQ;qpLiC:return;goto eo5Wb;J_e0r:if (!($Payment && $Payment->getMethodClass() === AmazonPay::class && preg_match('/shopping_coupon/', $referer))) {goto HnFsF;}goto otqQS;ApgV1:$uri = $request->getUri();goto hGn88;K6k0x:$parameters['AmazonPayV2Config'] = $Config;goto uaZBZ;tSShw:exit;goto Q0Tjp;hjX5h:goto jSZoV;goto bGWx4;TEOcd:$parameters = $event->getParameters();goto iXaYo;CTqsi:$event->addSnippet('@AmazonPayV2/default/Shopping/customer_regist_v2.twig');goto MnTth;jrf1m:$referer = $request->headers->get('referer');goto j68eZ;hcOkd:if ($Config->getEnv() == $this->eccubeConfig['amazon_pay_v2']['env']['prod']) {goto dXikc;}goto qAyUf;I2l2v:goto FSv_n;goto YldI2;MQKk6:jSZoV:goto u0Slh;Mc3W9:FSv_n:goto C5lSv;hGn88:$parameters = $event->getParameters();goto UF4HQ;eNanT:$event->addSnippet('@AmazonPayV2/default/Shopping/widgets.twig');goto CTqsi;birXT:}public function amazon_pay_shopping_confirm(TemplateEvent $event){goto IuIBz;O0VIc:hrS2s:goto s6ro_;R5nTo:$useMailMagazine = true;goto O0VIc;GRwPr:goto YZjQR;goto c8_fL;PAg8s:Upgpd:goto R5nTo;U2xfy:$parameters['AmazonPayV2Api'] = $this->eccubeConfig['amazon_pay_v2']['api']['sandbox'];goto GRwPr;c8_fL:M0ThQ:goto z2uD7;a08fu:$parameters = $event->getParameters();goto I89Kg;eHqzR:XfYNK:goto a0h0_;G5z0Q:goto hrS2s;goto PAg8s;DLQrf:$event->addSnippet('@AmazonPayV2/default/Shopping/confirm_widgets.twig');goto nLXdx;Jeozw:if ($Config->getEnv() == $this->eccubeConfig['amazon_pay_v2']['env']['prod']) {goto M0ThQ;}goto U2xfy;s6ro_:$parameters['useMailMagazine'] = $useMailMagazine;goto Jeozw;IuIBz:$request = $this->requestStack->getMasterRequest();goto ci1sK;I89Kg:$parameters['AmazonPayV2Config'] = $Config;goto KwQXj;z8rWb:$useMailMagazine = false;goto G5z0Q;z2uD7:$parameters['AmazonPayV2Api'] = $this->eccubeConfig['amazon_pay_v2']['api']['prod'];goto Nt2ZD;ci1sK:$uri = $request->getUri();goto Gue9T;nLXdx:$event->addSnippet('@AmazonPayV2/default/Shopping/confirm_customer_regist_v2.twig');goto a08fu;a0h0_:$Config = $this->configRepository->get();goto DLQrf;C4YwN:return;goto eHqzR;Nt2ZD:YZjQR:goto h5hlB;KwQXj:if ($this->pluginRepository->findOneBy(['code' => 'MailMagazine4', 'enabled' => true]) || $this->pluginRepository->findOneBy(['code' => 'PostCarrier4', 'enabled' => true])) {goto Upgpd;}goto z8rWb;Gue9T:if (!(preg_match('/shopping\\/amazon_pay/', $uri) == false)) {goto XfYNK;}goto C4YwN;h5hlB:$event->setParameters($parameters);goto b4GeX;b4GeX:}public function mypage_login(TemplateEvent $event){goto qksV2;f3fML:$returnUrl = $this->router->generate('login_with_amazon', ['state' => $state], UrlGeneratorInterface::ABSOLUTE_URL);goto tW6Bt;dLXW3:$event->addSnippet('@AmazonPayV2/default/Mypage/login_page_button.twig');goto t2CVK;xPKpy:if (!($Config->getMypageLoginButtonPlace() == $this->eccubeConfig['amazon_pay_v2']['button_place']['auto'])) {goto tS7Rw;}goto dLXW3;J7Sw9:return;goto Nlgr5;g9ucG:$parameters['AmazonPayV2Api'] = $this->eccubeConfig['amazon_pay_v2']['api']['sandbox'];goto gTSMC;tW6Bt:$parameters = $event->getParameters();goto v_YXu;xaAt9:if ($Config->getEnv() == $this->eccubeConfig['amazon_pay_v2']['env']['prod']) {goto i2jnu;}goto g9ucG;qksV2:$Config = $this->configRepository->get();goto LtMy7;Tm95u:$state = $this->session->get($this->sessionAmazonLoginStateKey);goto wn2d6;ufZV9:$parameters['buttonColor'] = $Config->getMypageLoginButtonColor();goto oT5Zn;NA1O_:g9ZyY:goto f3fML;gTSMC:goto AGQEB;goto das4k;cxRke:$parameters['AmazonPayV2Api'] = $this->eccubeConfig['amazon_pay_v2']['api']['prod'];goto ddX4g;Nlgr5:qnsQi:goto Tm95u;LZZl1:$signature = $this->amazonRequestService->signaturePayload($payload);goto EQ015;LtMy7:if (!($Config->getUseMypageLoginButton() == $this->eccubeConfig['amazon_pay_v2']['toggle']['off'])) {goto qnsQi;}goto J7Sw9;oT5Zn:$parameters['AmazonPayV2Config'] = $Config;goto xaAt9;EQ015:$parameters['payload'] = $payload;goto Cz3mC;t2CVK:tS7Rw:goto UL0Nv;das4k:i2jnu:goto cxRke;RDuH5:$event->setParameters($parameters);goto xPKpy;lz4x4:$this->session->set($this->sessionAmazonLoginStateKey, $state);goto NA1O_;P5ggw:$state = bin2hex(Random::string(16));goto lz4x4;UL0Nv:$event->addSnippet('@AmazonPayV2/default/Mypage/amazon_login_js.twig');goto HkUAF;ddX4g:AGQEB:goto RDuH5;v_YXu:$payload = $this->amazonRequestService->createSigninPayload($returnUrl);goto LZZl1;Cz3mC:$parameters['signature'] = $signature;goto ufZV9;wn2d6:if ($state) {goto g9ZyY;}goto P5ggw;HkUAF:}}