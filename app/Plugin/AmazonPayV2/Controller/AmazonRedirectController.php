<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.3   |
    |              on 2021-07-20 10:45:26              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
namespace Plugin\AmazonPayV2\Controller;use Eccube\Controller\AbstractController;use Eccube\Repository\CustomerRepository;use Eccube\Repository\ClassCategoryRepository;use Eccube\Repository\ProductRepository;use Eccube\Repository\ProductClassRepository;use Eccube\Common\EccubeConfig;use Eccube\Service\CartService;use Eccube\Service\OrderHelper;use Eccube\Service\PurchaseFlow\PurchaseContext;use Eccube\Service\PurchaseFlow\PurchaseFlow;use Plugin\AmazonPayV2\Repository\ConfigRepository;use Plugin\AmazonPayV2\Service\AmazonOrderHelper;use Plugin\AmazonPayV2\Service\AmazonRequestService;use Plugin\AmazonPayV2\Service\AmazonIPNService;use Symfony\Component\Routing\Annotation\Route;use Symfony\Component\HttpFoundation\ParameterBag;use Symfony\Component\HttpFoundation\Request;use Symfony\Component\HttpFoundation\Response;use Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException;use Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface;use Symfony\Component\Security\Core\Authentication\Token\UsernamePasswordToken;class AmazonRedirectController extends AbstractController{private $sessionAmazonProfileKey = 'amazon_pay_v2.profile';private $sessionAmazonCheckoutSessionIdKey = 'amazon_pay_v2.checkout_session_id';private $sessionIsShippingRefresh = 'amazon_pay_v2.is_shipping_refresh';private $sessionAmazonLoginStateKey = 'amazon_pay_v2.amazon_login_state';protected $cartService;protected $configRepository;protected $amazonRequestService;protected $amazonIPNService;public function __construct(PurchaseFlow $cartPurchaseFlow, OrderHelper $orderHelper, CartService $cartService, CustomerRepository $customerRepository, ClassCategoryRepository $classCategoryRepository, ProductRepository $productRepository, ProductClassRepository $productClassRepository, ConfigRepository $configRepository, AmazonOrderHelper $amazonOrderHelper, AmazonRequestService $amazonRequestService, AmazonIPNService $amazonIPNService, ParameterBag $parameterBag, EccubeConfig $eccubeConfig, TokenStorageInterface $tokenStorage){goto ykei5;MXLUN:$this->amazonRequestService = $amazonRequestService;goto XHXon;f4x6t:$this->Config = $configRepository->get();goto Vu0_G;iuaWu:$this->amazonOrderHelper = $amazonOrderHelper;goto MXLUN;gaNyQ:$this->classCategoryRepository = $classCategoryRepository;goto mzptY;S3v1j:$this->eccubeConfig = $eccubeConfig;goto Zk1cC;m3Khr:$this->parameterBag = $parameterBag;goto S3v1j;FQzlv:$this->orderHelper = $orderHelper;goto CTSOj;XHXon:$this->amazonIPNService = $amazonIPNService;goto m3Khr;aW3X5:$this->customerRepository = $customerRepository;goto gaNyQ;ykei5:$this->purchaseFlow = $cartPurchaseFlow;goto FQzlv;CTSOj:$this->cartService = $cartService;goto aW3X5;mzptY:$this->productRepository = $productRepository;goto i19XU;KMbkz:$this->configRepository = $configRepository;goto iuaWu;Zk1cC:$this->tokenStorage = $tokenStorage;goto f4x6t;i19XU:$this->productClassRepository = $productClassRepository;goto KMbkz;Vu0_G:}    /**
     * @Route("/amazon_checkout_review", name="amazon_checkout_review")
     *
     * @param Request $request
     *
     * @return RedirectResponse
     */
public function amazonCheckoutReview(Request $request){goto FgvkJ;rbkaG:xIHSI:goto SYARQ;xZFYS:$kana01 = $Customer->getKana01();goto CKNI1;CZzJL:Eu9Cf:goto sBOke;U4g76:$Customer->setName01($arrFixName['name01'])->setName02($arrFixName['name02']);goto dn5cZ;Pjopc:if (empty($arrFixKana)) {goto m1zDK;}goto AJgeM;CKNI1:$kana02 = $Customer->getKana02();goto GgnAA;Uy2KD:$this->tokenStorage->setToken($token);goto Q6cSw;UybY_:$this->session->set($this->sessionIsShippingRefresh, true);goto CAYMc;XFKMS:yHoVS:goto HBWq0;DJ2Ff:iwuNQ:goto aFSQP;QKrAf:$cartKey = $request->get('cart');goto II7WE;FwRvt:$Customer = $this->getUser();goto HPl5E;ffBRM:$arrFixKana = $this->amazonOrderHelper->reviseKana($Customer->getName01(), $Customer->getName02(), $Customer->getEmail());goto Pjopc;giAaM:if (!(!$this->isGranted('ROLE_USER') && $this->Config->getAutoLogin() == $this->eccubeConfig['amazon_pay_v2']['toggle']['on'] && ($Customer = $this->customerRepository->getNonWithdrawingCustomers(['v2_amazon_user_id' => $buyer->buyerId])))) {goto q23oF;}goto pYugm;zINlV:if (!(empty($name02) || $name02 == '　')) {goto STFDn;}goto JpFYz;LUuIr:return $this->redirectToRoute('amazon_pay_shopping', []);goto lylH8;l1kYZ:m1zDK:goto XFKMS;aTvx8:try {$checkoutSession = $this->amazonRequestService->getCheckoutSession($request->get('amazonCheckoutSessionId'));$buyer = $checkoutSession->buyer;} catch (\Exception $e) {return $this->redirectToRoute('shopping_error');}goto QKrAf;CAYMc:logs('amazon_pay_v2')->info('AmazonRedirect::index end.');goto LUuIr;pYugm:$token = new UsernamePasswordToken($Customer[0], null, 'customer', ['ROLE_USER']);goto Uy2KD;AvL9S:$this->entityManager->flush();goto GBe3d;HBWq0:if (!$revise_flg) {goto G76r8;}goto f1Nl4;FgvkJ:logs('amazon_pay_v2')->info('AmazonRedirect::amazonCheckoutReview start.');goto aTvx8;YVOcF:if (empty($arrFixName)) {goto xIHSI;}goto U4g76;SYARQ:STFDn:goto xZFYS;vxyg8:$revise_flg = true;goto kPjBL;Q6cSw:$request->getSession()->migrate(true);goto GE7Em;GE7Em:$this->cartService->mergeFromPersistedCart();goto LNCm2;NtfVc:$this->session->set($this->sessionAmazonCheckoutSessionIdKey, $request->get('amazonCheckoutSessionId'));goto UybY_;f1Nl4:$this->entityManager->persist($Customer);goto AvL9S;K7Zc9:$this->cartService->save();goto giAaM;GBe3d:G76r8:goto CZzJL;dn5cZ:$revise_flg = true;goto BfGy_;sBOke:$this->session->set($this->sessionAmazonProfileKey, serialize($buyer));goto NtfVc;HPl5E:$revise_flg = false;goto AZC2o;aFSQP:$this->cartService->save();goto oBJOg;oBJOg:q23oF:goto XQFNu;AZC2o:$name02 = $Customer->getName02();goto zINlV;LNCm2:foreach ($this->cartService->getCarts() as $Cart) {$this->purchaseFlow->validate($Cart, new PurchaseContext($Cart, $Customer[0]));Esi4f:}goto DJ2Ff;XQFNu:if (!($this->isGranted('IS_AUTHENTICATED_FULLY') && $this->Config->getOrderCorrect() == $this->eccubeConfig['amazon_pay_v2']['toggle']['on'])) {goto Eu9Cf;}goto FwRvt;kPjBL:logs('amazon_pay_v2')->info('*** 会員情報 フリガナ補正 *** customer_id = ' . $Customer->getId());goto l1kYZ;JpFYz:$arrFixName = $this->amazonOrderHelper->reviseName($Customer->getName01());goto YVOcF;GgnAA:if (!((empty($kana01) || $kana01 === '　') && (empty($kana02) || $kana02 === '　'))) {goto yHoVS;}goto ffBRM;AJgeM:$Customer->setKana01($arrFixKana['kana01'])->setKana02($arrFixKana['kana02']);goto vxyg8;BfGy_:logs('amazon_pay_v2')->info('*** 会員情報 名前補正 *** customer_id = ' . $Customer->getId());goto rbkaG;II7WE:$this->cartService->setPrimary($cartKey);goto K7Zc9;lylH8:}    /**
     * @Route("/amazon_instant_payment_notifications", name="instant_payment_notifications")
     */
public function instantPaymentNotifications(Request $request){goto q7FuR;ZXnR7:$content = json_decode($json, true);goto wp9tO;vK6WO:$json = $request->getContent();goto ZXnR7;wp9tO:if (isset($content['Type']) && $content['Type'] == 'Notification') {goto EyX97;}goto bKdLW;hf9BT:$arrParam = json_decode($content['Message'], true);goto XGNdk;q7FuR:logs('amazon_pay_v2')->info('AmazonRedirect::instantPaymentNotifications start.');goto vK6WO;bKdLW:throw new \Exception('IPN Type Error.');goto yot0H;VvS_v:EyX97:goto hf9BT;U9P4j:return new Response();goto NwnuU;XGNdk:$this->amazonIPNService->mainProcess($arrParam);goto UeJ2N;jrtc8:logs('amazon_pay_v2')->info('AmazonRedirect::instantPaymentNotifications end.');goto U9P4j;yot0H:goto JVVhE;goto VvS_v;UeJ2N:JVVhE:goto jrtc8;NwnuU:}    /**
     * @Route("/mypage/login_with_amazon", name="login_with_amazon")
     */
public function loginWithAmazon(Request $request){goto CrrPt;w1UZp:if (!($state !== $sessionState)) {goto mLTBd;}goto lsJjH;HZFLs:$sessionState = $this->session->get($this->sessionAmazonLoginStateKey);goto vg2SM;SEkpW:logs('amazon_pay_v2')->info('AmazonRedirect::loginWithAmazon end.');goto CMztk;iPL2Q:$route = 'homepage';goto gUFP3;gUFP3:$buyerToken = $request->get('buyerToken');goto oSzSv;No0L8:try {goto uCVAA;YU73C:if ($isLogin) {goto JjRCS;}goto qiYc5;wwD8N:$route = 'mypage_login';goto SuLYM;y91Bw:$buyer = $this->amazonRequestService->getBuyer($request->get('buyerToken'));goto dg5nZ;uCVAA:if ($this->isGranted('ROLE_USER')) {goto Os6_A;}goto y91Bw;qiYc5:$this->addError('amazon_pay_v2.front_mypage_fail_to_login', 'amazon_pay_v2');goto wwD8N;LGLdV:Os6_A:goto P2Gbc;SuLYM:JjRCS:goto LGLdV;e_ui0:$isLogin = $this->amazonRequestService->loginWithBuyerId($request, $buyerId);goto YU73C;dg5nZ:$buyerId = $buyer->buyerId;goto e_ui0;P2Gbc:} catch (\Exception $e) {goto xgQnS;xgQnS:logs('amazon_pay_v2')->info($e->getMessage());goto uaKT4;uaKT4:$this->addError('amazon_pay_v2.front.error', 'amazon_pay_v2');goto EwMFu;EwMFu:$route = 'mypage_login';goto Fn4aC;Fn4aC:}goto SEkpW;rqMqu:g9_2N:goto w1UZp;oSzSv:$state = $request->get('state');goto HZFLs;CrrPt:logs('amazon_pay_v2')->info('AmazonRedirect::loginWithAmazon start.');goto iPL2Q;rLw5R:mLTBd:goto XmecU;lsJjH:$this->addError('amazon_pay_v2.front.error', 'amazon_pay_v2');goto DQWeC;vg2SM:if (!(!isset($buyerToken) || !isset($state))) {goto g9_2N;}goto SIMXY;K1JHn:return $this->redirectToRoute($route);goto rLw5R;SIMXY:throw new AccessDeniedHttpException('不正なアクセスです。');goto rqMqu;XmecU:$this->session->remove($this->sessionAmazonLoginStateKey);goto No0L8;CMztk:return $this->redirectToRoute($route);goto PJBDH;DQWeC:$route = 'mypage_login';goto K1JHn;PJBDH:}}