<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.3   |
    |              on 2021-07-20 10:45:26              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
namespace Plugin\AmazonPayV2\Controller\Admin;use Eccube\Common\Constant;use Eccube\Controller\AbstractController;use Eccube\Entity\Order;use Eccube\Repository\PluginRepository;use Eccube\Repository\Master\PageMaxRepository;use Eccube\Repository\OrderRepository;use Eccube\Repository\PaymentRepository;use Eccube\Util\FormUtil;use Knp\Component\Pager\PaginatorInterface;use Plugin\AmazonPayV2\Form\Type\Admin\SearchPaymentType;use Plugin\AmazonPayV2\Service\Method\AmazonPay;use Plugin\AmazonPayV2\Service\AmazonOrderHelper;use Plugin\AmazonPayV2\Repository\Master\AmazonStatusRepository;use Symfony\Component\Routing\Annotation\Route;use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template;use Symfony\Component\HttpFoundation\Request;class PaymentStatusController extends AbstractController{protected $paymentStatusRepository;protected $pageMaxRepository;protected $orderRepository;public function __construct(AmazonStatusRepository $amazonStatusRepository, AmazonOrderHelper $amazonOrderHelper, PageMaxRepository $pageMaxRepository, OrderRepository $orderRepository, PaymentRepository $paymentRepository, PluginRepository $pluginRepository){goto kxrmW;zg2BU:$this->amazonOrderHelper = $amazonOrderHelper;goto I29fe;kxrmW:$this->amazonStatusRepository = $amazonStatusRepository;goto zg2BU;I29fe:$this->pageMaxRepository = $pageMaxRepository;goto cY64h;cY64h:$this->orderRepository = $orderRepository;goto lHtyP;lHtyP:$this->paymentRepository = $paymentRepository;goto FQcd_;FQcd_:$this->pluginRepository = $pluginRepository;goto uyp4E;uyp4E:}    /**
     * 決済状況一覧画面
     *
     * @Route("/%eccube_admin_route%/amazon_pay_v2/payment_status", name="amazon_pay_v2_admin_payment_status")
     * @Route("/%eccube_admin_route%/amazon_pay_v2/payment_status/{page_no}", requirements={"page_no" = "\d+"}, name="amazon_pay_v2_admin_payment_status_pageno")
     * @Template("@AmazonPayV2/admin/Order/payment_status.twig")
     */
public function index(Request $request, $page_no = null, PaginatorInterface $paginator){goto Wcbxq;RnTjX:$this->session->set('amazon_pay_v2.admin.payment_status.search', $searchData);goto zC6aB;MbT9y:goto bnPoI;goto KxKkJ;LijR0:goto MiS2r;goto rCgbJ;wXUUn:foreach ($pageMaxis as $pageMax) {goto i6E1i;SE6kV:$this->session->set('amazon_pay_v2.admin.payment_status.search.page_count', $page_count);goto sMU88;i6E1i:if (!($page_count_param == $pageMax->getName())) {goto Bsr5C;}goto oIZ3P;BdMVQ:TUUgQ:goto C0Oii;up5YU:Bsr5C:goto BdMVQ;sMU88:goto QFllx;goto up5YU;oIZ3P:$page_count = $pageMax->getName();goto SE6kV;C0Oii:}goto pXyfR;MoVkG:MiS2r:goto S7Qjw;v1o_7:if (null !== $page_no || $request->get('resume')) {goto NKeoP;}goto yCTtd;uhxFE:$page_no = $this->session->get('amazon_pay_v2.admin.payment_status.search.page_no', 1);goto QMR4f;Bnvhd:return ['searchForm' => $searchForm->createView(), 'pagination' => [], 'pageMaxis' => $pageMaxis, 'page_no' => $page_no, 'page_count' => $page_count, 'has_errors' => true];goto LijR0;rCgbJ:mlTjj:goto Fu33z;J741v:$this->session->set('amazon_pay_v2.admin.payment_status.search', FormUtil::getViewData($searchForm));goto pIXLh;beeMW:$viewData = $this->session->get('amazon_pay_v2.admin.payment_status.search', []);goto mTO06;Kq842:$this->session->set('amazon_pay_v2.admin.payment_status.search.page_no', (int) $page_no);goto M3iyu;txHms:$searchForm->handleRequest($request);goto fS7_Z;S7Qjw:bnPoI:goto jCIGG;ttu56:if (!$page_count_param) {goto QYP0Q;}goto wXUUn;eLghR:$pageMaxis = $this->pageMaxRepository->findAll();goto ttu56;mTO06:$searchData = FormUtil::submitAndGetData($searchForm, $viewData);goto CvUYc;Wcbxq:$searchForm = $this->createForm(SearchPaymentType::class);goto aM1iX;KxKkJ:QTfAA:goto txHms;A2gKN:if ($page_no) {goto er5GJ;}goto uhxFE;aM1iX:$page_count = $this->session->get('amazon_pay_v2.admin.payment_status.search.page_count', $this->eccubeConfig->get('eccube_default_page_count'));goto C1YxP;CvUYc:foCtU:goto MbT9y;YEV7L:$searchData = [];goto RnTjX;mfabI:return ['searchForm' => $searchForm->createView(), 'pagination' => $pagination, 'pageMaxis' => $pageMaxis, 'page_no' => $page_no, 'page_count' => $page_count, 'has_errors' => false];goto gG3Vt;M3iyu:KrgwJ:goto beeMW;Cjttv:$searchData = $searchForm->getData();goto J741v;Fu33z:$page_no = 1;goto Cjttv;NaLG_:er5GJ:goto Kq842;sPViO:$pagination = $paginator->paginate($qb, $page_no, $page_count);goto mfabI;yCTtd:$page_no = 1;goto YEV7L;jCIGG:$qb = $this->createQueryBuilder($searchData);goto sPViO;zC6aB:$this->session->set('amazon_pay_v2.admin.payment_status.search.page_no', $page_no);goto nuXlt;mHBX0:NKeoP:goto A2gKN;uIWXz:QYP0Q:goto FRlpT;fS7_Z:if ($searchForm->isSubmitted() && $searchForm->isValid()) {goto mlTjj;}goto Bnvhd;C1YxP:$page_count_param = (int) $request->get('page_count');goto eLghR;pIXLh:$this->session->set('amazon_pay_v2.admin.payment_status.search.page_no', $page_no);goto MoVkG;nuXlt:goto foCtU;goto mHBX0;FRlpT:if ('POST' === $request->getMethod()) {goto QTfAA;}goto v1o_7;pXyfR:QFllx:goto uIWXz;QMR4f:goto KrgwJ;goto NaLG_;gG3Vt:}    /**
     * 一括処理.
     *
     * @Route("/%eccube_admin_route%/amazon_pay_v2/payment_status/request_action/", name="amazon_pay_v2_admin_payment_status_request", methods={"POST"})
     */
public function requestAction(Request $request){goto EBWN0;a8cWT:$requestOrderId = $request->get('amazon_order_id');goto j95bg;jJc4o:ZbbKC:goto pf3iE;Hw9d8:$ids = $request->get($amazon_request . '_id');goto xMFSO;EBWN0:$amazon_request = $request->get('amazon_request');goto a5o09;nrMlX:d42E9:goto lwXsU;uAz_N:gJq_2:goto Rk3tP;Rk3tP:$ids = [$requestOrderId];goto nrMlX;xMFSO:goto d42E9;goto uAz_N;fTd24:Bvpvd:goto jGAXo;pf3iE:return $this->redirectToRoute('amazon_pay_v2_admin_payment_status_pageno', ['resume' => Constant::ENABLED]);goto L8mhk;azI4M:foreach ($Orders as $Order) {goto u0Zuo;p1W83:$result_message = "■注文番号:" . $Order->getId() . " ： " . $request_name . "処理に失敗しました。" . $amazonErr;goto l94C0;kKM9b:$this->addSuccess($result_message, 'admin');goto LHMkU;LHMkU:imN2W:goto UJ_EH;kWKRT:$result_message = "■注文番号:" . $Order->getId() . " ： " . $request_name . "処理に成功しました。";goto kKM9b;AmMi9:if (empty($amazonErr)) {goto ImIip;}goto p1W83;UJ_EH:c7GZ2:goto mn90z;E6uKr:ImIip:goto kWKRT;u0Zuo:$amazonErr = $this->amazonOrderHelper->adminRequest($amazon_request, $Order);goto AmMi9;l94C0:$this->addError($result_message, 'admin');goto iKWkQ;iKWkQ:goto imN2W;goto E6uKr;mn90z:}goto jJc4o;a5o09:if (isset($amazon_request)) {goto Bvpvd;}goto Leuvo;pdc2h:$Orders = $this->orderRepository->findBy(['id' => $ids]);goto azI4M;jGAXo:$this->isTokenValid();goto a8cWT;Leuvo:throw new BadRequestHttpException();goto fTd24;j95bg:if (!empty($requestOrderId)) {goto gJq_2;}goto Hw9d8;lwXsU:$request_name = $amazon_request == 'capture' ? '売上' : '取消';goto pdc2h;L8mhk:}private function createQueryBuilder(array $searchData){goto K2Wxz;cSlKd:NGuCL:goto vevyl;cENrD:$V1Enable_flg = $this->pluginRepository->findOneBy(array('code' => 'AmazonPay', 'enabled' => Constant::ENABLED));goto AzrHZ;IPKWJ:$qb->andWhere('o.Payment = :PaymentV2')->setParameter('PaymentV2', $PaymentV2)->andWhere('o.AmazonPayV2AmazonStatus IS NOT NULL');goto iXyI4;vevyl:return $qb;goto vfqMK;x6ufd:$PaymentV1 = $this->paymentRepository->findOneBy(['method_class' => \Plugin\AmazonPay\Service\Method\AmazonPay::class]);goto Pwm32;K2Wxz:$qb = $this->entityManager->createQueryBuilder();goto O86Qo;O86Qo:$qb->select('o')->from(Order::class, 'o')->orderBy('o.order_date', 'DESC')->addOrderBy('o.id', 'DESC');goto cENrD;ydoVF:JVVWZ:goto ripwn;jVlzl:$qb->andWhere($qb->expr()->in('o.AmazonPayV2AmazonStatus', ':AmazonStatuses'))->setParameter('AmazonStatuses', $searchData['AmazonStatuses']);goto cSlKd;Pwm32:$qb->andWhere($qb->expr()->orX($qb->expr()->eq('o.Payment', ':PaymentV1'), $qb->expr()->eq('o.Payment', ':PaymentV2')))->setParameter('PaymentV1', $PaymentV1)->setParameter('PaymentV2', $PaymentV2)->andWhere($qb->expr()->orX($qb->expr()->isNotNull('o.AmazonStatus'), $qb->expr()->isNotNull('o.AmazonPayV2AmazonStatus')));goto pGuch;rpv9e:if (!(!empty($searchData['OrderStatuses']) && count($searchData['OrderStatuses']) > 0)) {goto JVVWZ;}goto ekdr5;iXyI4:goto krXce;goto bjE7f;pGuch:krXce:goto FBVB4;yQHw9:if (isset($V1Enable_flg)) {goto nlc3y;}goto IPKWJ;ekdr5:$qb->andWhere($qb->expr()->in('o.OrderStatus', ':OrderStatuses'))->setParameter('OrderStatuses', $searchData['OrderStatuses']);goto ydoVF;bjE7f:nlc3y:goto x6ufd;AzrHZ:$PaymentV2 = $this->paymentRepository->findOneBy(['method_class' => AmazonPay::class]);goto yQHw9;ripwn:if (!(!empty($searchData['AmazonStatuses']) && count($searchData['AmazonStatuses']) > 0)) {goto NGuCL;}goto jVlzl;FBVB4:$qb->andWhere('o.order_date IS NOT NULL');goto rpv9e;vfqMK:}}