<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.3   |
    |              on 2021-07-20 10:45:27              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
namespace Plugin\AmazonPayV2\Form\Type\Admin;use Eccube\Common\EccubeConfig;use Plugin\AmazonPayV2\Entity\Config;use Symfony\Component\Form\AbstractType;use Symfony\Component\Form\Extension\Core\Type\TextType;use Symfony\Component\Form\Extension\Core\Type\ChoiceType;use Symfony\Component\Form\Extension\Core\Type\TextareaType;use Symfony\Component\Form\FormBuilderInterface;use Symfony\Component\OptionsResolver\OptionsResolver;use Symfony\Component\Validator\Constraints as Assert;use Symfony\Component\Validator\Context\ExecutionContextInterface;class ConfigType extends AbstractType{protected $eccubeConfig;public function __construct(EccubeConfig $eccubeConfig){$this->eccubeConfig = $eccubeConfig;}public function buildForm(FormBuilderInterface $builder, array $options){$builder->add('amazon_account_mode', ChoiceType::class, ['choices' => ['共用アカウント(アイピーロジック配布)' => $this->eccubeConfig['amazon_pay_v2']['account_mode']['shared'], '自社契約アカウント' => $this->eccubeConfig['amazon_pay_v2']['account_mode']['owned']], 'constraints' => [new Assert\NotBlank(['message' => '※ アカウント切り替えが選択されていません。'])], 'multiple' => false, 'expanded' => true])->add('env', ChoiceType::class, ['choices' => ['テスト環境' => $this->eccubeConfig['amazon_pay_v2']['env']['sandbox'], '本番環境' => $this->eccubeConfig['amazon_pay_v2']['env']['prod']], 'multiple' => false, 'expanded' => true])->add('seller_id', TextType::class, ['required' => false, 'constraints' => [new Assert\Callback(function ($objcet, ExecutionContextInterface $context) {goto JWHjv;YxtYo:$context->buildViolation('※ 出品者IDが入力されていません。')->atPath('seller_id')->addViolation();goto JT8U2;JT8U2:qRzgZ:goto hrvYt;fcLQw:if (!($mode == $this->eccubeConfig['amazon_pay_v2']['account_mode']['owned'] && !$objcet)) {goto qRzgZ;}goto YxtYo;JWHjv:$mode = $context->getRoot()->get('amazon_account_mode')->getData();goto fcLQw;hrvYt:}), new Assert\Length(['max' => $this->eccubeConfig['eccube_stext_len']])]])->add('public_key_id', TextType::class, ['required' => false, 'constraints' => [new Assert\Callback(function ($objcet, ExecutionContextInterface $context) {goto L2Swz;L2Swz:$mode = $context->getRoot()->get('amazon_account_mode')->getData();goto rgXw7;maTAk:$context->buildViolation('※ パブリックキーIDが入力されていません。')->atPath('public_key_id')->addViolation();goto kLC2d;rgXw7:if (!($mode == $this->eccubeConfig['amazon_pay_v2']['account_mode']['owned'] && !$objcet)) {goto RwMIr;}goto maTAk;kLC2d:RwMIr:goto Rly1W;Rly1W:}), new Assert\Length(['max' => $this->eccubeConfig['eccube_stext_len']])]])->add('private_key_path', TextType::class, ['required' => false, 'constraints' => [new Assert\Callback(function ($objcet, ExecutionContextInterface $context) {goto Wb02p;MsYm_:$context->buildViolation('※ プライベートキーパスが入力されていません。')->atPath('private_key_path')->addViolation();goto VMrj4;VMrj4:CRudK:goto NyEiY;cbczt:if (!($mode == $this->eccubeConfig['amazon_pay_v2']['account_mode']['owned'] && !$objcet)) {goto CRudK;}goto MsYm_;Wb02p:$mode = $context->getRoot()->get('amazon_account_mode')->getData();goto cbczt;NyEiY:}), new Assert\Length(['max' => $this->eccubeConfig['eccube_smtext_len']])]])->add('client_id', TextType::class, ['required' => false, 'constraints' => [new Assert\Callback(function ($objcet, ExecutionContextInterface $context) {goto xXzqx;fd9oi:$context->buildViolation('※ クライアントIDが入力されていません。')->atPath('client_id')->addViolation();goto g27wp;xXzqx:$mode = $context->getRoot()->get('amazon_account_mode')->getData();goto NanTB;g27wp:gaQMp:goto B1fDl;NanTB:if (!($mode == $this->eccubeConfig['amazon_pay_v2']['account_mode']['owned'] && !$objcet)) {goto gaQMp;}goto fd9oi;B1fDl:}), new Assert\Length(['max' => $this->eccubeConfig['eccube_smtext_len']])]])->add('test_client_id', TextType::class, ['required' => false, 'constraints' => [new Assert\Callback(function ($objcet, ExecutionContextInterface $context) {goto lQdPF;lQdPF:$mode = $context->getRoot()->get('amazon_account_mode')->getData();goto c6baM;c6baM:if (!($mode == $this->eccubeConfig['amazon_pay_v2']['account_mode']['shared'] && !$objcet)) {goto xv0m3;}goto R8hix;R8hix:$context->buildViolation('※ テスト用クライアントIDが入力されていません。')->atPath('test_client_id')->addViolation();goto hX7Cp;hX7Cp:xv0m3:goto ULOKU;ULOKU:}), new Assert\Length(['max' => $this->eccubeConfig['eccube_smtext_len']])]])->add('prod_key', TextType::class, ['required' => false, 'constraints' => [new Assert\Length(['max' => $this->eccubeConfig['eccube_smtext_len']])]])->add('sale', ChoiceType::class, ['choices' => ['仮売上' => $this->eccubeConfig['amazon_pay_v2']['sale']['authori'], '売上' => $this->eccubeConfig['amazon_pay_v2']['sale']['capture']], 'constraints' => [new Assert\NotBlank(['message' => '※ 仮売上 or 売上が選択されていません。'])], 'multiple' => false, 'expanded' => true])->add('use_confirm_page', ChoiceType::class, ['choices' => ['表示' => $this->eccubeConfig['amazon_pay_v2']['toggle']['on'], '非表示' => $this->eccubeConfig['amazon_pay_v2']['toggle']['off']], 'constraints' => [new Assert\NotBlank(['message' => '※ 決済確認画面が選択されていません。'])], 'multiple' => false, 'expanded' => true])->add('auto_login', ChoiceType::class, ['choices' => ['オン' => $this->eccubeConfig['amazon_pay_v2']['toggle']['on'], 'オフ' => $this->eccubeConfig['amazon_pay_v2']['toggle']['off']], 'constraints' => [new Assert\NotBlank(['message' => '※ 自動ログインが選択されていません。'])], 'multiple' => false, 'expanded' => true])->add('login_required', ChoiceType::class, ['choices' => ['オン' => $this->eccubeConfig['amazon_pay_v2']['toggle']['on'], 'オフ' => $this->eccubeConfig['amazon_pay_v2']['toggle']['off']], 'constraints' => [new Assert\NotBlank(['message' => '※ ログイン・会員登録必須が選択されていません。'])], 'multiple' => false, 'expanded' => true])->add('order_correct', ChoiceType::class, ['choices' => ['オン' => $this->eccubeConfig['amazon_pay_v2']['toggle']['on'], 'オフ' => $this->eccubeConfig['amazon_pay_v2']['toggle']['off']], 'constraints' => [new Assert\NotBlank(['message' => '※ 受注補正機能が選択されていません。'])], 'multiple' => false, 'expanded' => true])->add('mail_notices', TextareaType::class, ['required' => false, 'constraints' => [new Assert\Length(['max' => $this->eccubeConfig['eccube_ltext_len']])]])->add('use_cart_button', ChoiceType::class, ['choices' => ['オン' => $this->eccubeConfig['amazon_pay_v2']['toggle']['on'], 'オフ' => $this->eccubeConfig['amazon_pay_v2']['toggle']['off']], 'constraints' => [new Assert\NotBlank(['message' => '※ Amazonボタン設置(カート画面)が選択されていません。'])], 'multiple' => false, 'expanded' => true])->add('cart_button_color', ChoiceType::class, ['choices' => ['ゴールド' => 'Gold', 'ダークグレー' => 'DarkGray', 'ライトグレー' => 'LightGray'], 'constraints' => [new Assert\NotBlank(['message' => '※ Amazonログインボタンカラー(カート)が選択されていません。'])], 'multiple' => false, 'expanded' => true])->add('cart_button_place', ChoiceType::class, ['choices' => ['自動' => $this->eccubeConfig['amazon_pay_v2']['button_place']['auto'], '手動' => $this->eccubeConfig['amazon_pay_v2']['button_place']['manual']], 'constraints' => [new Assert\NotBlank(['message' => '※ Amazonログインボタン配置(カート画面)が選択されていません。'])], 'multiple' => false, 'expanded' => true])->add('use_mypage_login_button', ChoiceType::class, ['choices' => ['オン' => $this->eccubeConfig['amazon_pay_v2']['toggle']['on'], 'オフ' => $this->eccubeConfig['amazon_pay_v2']['toggle']['off']], 'constraints' => [new Assert\NotBlank(['message' => '※「LoginWithAmazon」ボタン設置(MYページ/ログイン)が選択されていません。'])], 'multiple' => false, 'expanded' => true])->add('mypage_login_button_color', ChoiceType::class, ['choices' => ['ゴールド' => 'Gold', 'ダークグレー' => 'DarkGray', 'ライトグレー' => 'LightGray'], 'constraints' => [new Assert\NotBlank(['message' => '※「LoginWithAmazon」ボタンカラー(MYページ/ログイン)が選択されていません。'])], 'multiple' => false, 'expanded' => true])->add('mypage_login_button_place', ChoiceType::class, ['choices' => ['自動' => $this->eccubeConfig['amazon_pay_v2']['button_place']['auto'], '手動' => $this->eccubeConfig['amazon_pay_v2']['button_place']['manual']], 'constraints' => [new Assert\NotBlank(['message' => '※「LoginWithAmazon」ボタン配置(MYページ/ログイン)が選択されていません。'])], 'multiple' => false, 'expanded' => true]);}public function configureOptions(OptionsResolver $resolver){$resolver->setDefaults(['data_class' => Config::class]);}}