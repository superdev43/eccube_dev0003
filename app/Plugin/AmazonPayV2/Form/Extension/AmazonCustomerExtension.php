<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.3   |
    |              on 2021-07-20 10:45:27              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
namespace Plugin\AmazonPayV2\Form\Extension;use Eccube\Common\EccubeConfig;use Eccube\Entity\Order;use Eccube\Form\Type\Shopping\OrderType;use Eccube\Repository\PaymentRepository;use Eccube\Repository\PluginRepository;use Plugin\AmazonPayV2\Service\Method\AmazonPay;use Plugin\AmazonPayV2\Repository\ConfigRepository;use Symfony\Bundle\FrameworkBundle\Controller\ControllerTrait;use Symfony\Component\DependencyInjection\ContainerInterface;use Symfony\Component\Form\AbstractTypeExtension;use Symfony\Component\Form\Extension\Core\Type\TextType;use Symfony\Component\Form\Extension\Core\Type\PasswordType;use Symfony\Component\Form\Extension\Core\Type\ChoiceType;use Symfony\Component\Form\Extension\Core\Type\CheckboxType;use Symfony\Component\Form\FormBuilderInterface;use Symfony\Component\Form\FormEvent;use Symfony\Component\Form\FormEvents;class AmazonCustomerExtension extends AbstractTypeExtension{use ControllerTrait;protected $paymentRepository;protected $eccubeConfig;protected $configRepository;protected $container;public function __construct(EccubeConfig $eccubeConfig, PaymentRepository $paymentRepository, PluginRepository $pluginRepository, ConfigRepository $configRepository, ContainerInterface $container){goto Ht7PO;V5FUT:$this->pluginRepository = $pluginRepository;goto TOdro;TOdro:$this->eccubeConfig = $eccubeConfig;goto uaGs6;Ht7PO:$this->paymentRepository = $paymentRepository;goto V5FUT;uaGs6:$this->configRepository = $configRepository;goto XCRIk;XCRIk:$this->Config = $this->configRepository->get();goto tMDjv;tMDjv:$this->container = $container;goto F_Fjf;F_Fjf:}public function buildForm(FormBuilderInterface $builder, array $options){goto x6BOC;x6BOC:$self = $this;goto v9dHu;nmsp0:$builder->addEventListener(FormEvents::PRE_SUBMIT, function (FormEvent $event) {goto lVGpG;vYOXX:$form->remove('customer_regist_v2')->remove('login_check_v2')->remove('amazon_login_email_v2')->remove('amazon_login_password_v2');goto TlKKe;hH0Vx:$data = $event->getData();goto ilCA1;TlKKe:nT5ZR:goto IJgTs;AJH1a:vyBkM:goto AI8NQ;lnePX:if ($options['skip_add_form']) {goto vyBkM;}goto MN_BY;pSKBs:if (!(!empty($data['Payment']) && $Payment->getId() != $data['Payment'])) {goto nT5ZR;}goto vYOXX;lVGpG:$options = $event->getForm()->getConfig()->getOptions();goto lnePX;IJgTs:goto D1cJi;goto AJH1a;OpzMA:D1cJi:goto pj0gF;MN_BY:$Payment = $this->paymentRepository->findOneBy(['method_class' => AmazonPay::class]);goto hH0Vx;AI8NQ:return;goto OpzMA;ilCA1:$form = $event->getForm();goto pSKBs;pj0gF:});goto hazh0;v9dHu:$builder->addEventListener(FormEvents::POST_SET_DATA, function (FormEvent $event) use($self) {goto a5y9P;yuF9o:$form = $event->getForm();goto OUm6d;jFSXa:oy790:goto GlP3T;GlP3T:z5pYs:goto fwHhR;OuwtJ:$form->add('login_check_v2', ChoiceType::class, ['choices' => ['まだ会員登録されていないお客様' => 'regist', '会員登録がお済みのお客様' => 'login'], 'mapped' => false, 'expanded' => true])->add('amazon_login_email_v2', TextType::class, ['mapped' => false, 'required' => false, 'attr' => ['class' => 'form-control', 'max_length' => 50]])->add('amazon_login_password_v2', PasswordType::class, ['mapped' => false, 'required' => false, 'always_empty' => false, 'attr' => ['class' => 'form-control', 'max_length' => 50]]);goto jFSXa;a5y9P:$data = $event->getData();goto yuF9o;kE6yg:if (!($this->pluginRepository->findOneBy(['code' => 'MailMagazine4', 'enabled' => true]) || $this->pluginRepository->findOneBy(['code' => 'PostCarrier4', 'enabled' => true]))) {goto SQ0LF;}goto uuFrm;joaBC:if (!($this->Config->getLoginRequired() == $this->eccubeConfig['amazon_pay_v2']['toggle']['on'] && !$this->isGranted('IS_AUTHENTICATED_FULLY'))) {goto oy790;}goto OuwtJ;uuFrm:$form->add('mail_magazine', CheckboxType::class, ['label' => null, 'required' => false, 'mapped' => false, 'attr' => ['autocomplete' => 'off']]);goto YkKIW;UV_VP:if (!($data->getPayment()->getMethodClass() === AmazonPay::class && !$this->isGranted('IS_AUTHENTICATED_FULLY'))) {goto z5pYs;}goto PXW96;YkKIW:SQ0LF:goto joaBC;PXW96:$form->add('customer_regist_v2', CheckboxType::class, ['label' => null, 'required' => false, 'mapped' => false, 'attr' => ['autocomplete' => 'off']]);goto kE6yg;fwHhR:tVt6g:goto JTWbK;OUm6d:if (!$data->getPayment()) {goto tVt6g;}goto UV_VP;JTWbK:});goto nmsp0;hazh0:}public function getExtendedType(){return OrderType::class;}public static function getExtendedTypes() : iterable{return [OrderType::class];}}