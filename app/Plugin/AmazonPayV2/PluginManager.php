<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.3   |
    |              on 2021-07-20 10:45:27              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
namespace Plugin\AmazonPayV2;use Symfony\Component\Filesystem\Filesystem;use Symfony\Component\DependencyInjection\ContainerInterface;use Eccube\Plugin\AbstractPluginManager;use Eccube\Common\Constant;use Eccube\Entity\Payment;use Eccube\Entity\PaymentOption;use Eccube\Entity\Page;use Eccube\Entity\PageLayout;use Eccube\Entity\Csv;use Eccube\Entity\Plugin;use Eccube\Entity\Layout;use Eccube\Entity\BaseInfo;use Eccube\Entity\Master\CsvType;use Eccube\Repository\BaseInfoRepository;use Eccube\Repository\PageRepository;use Eccube\Repository\LayoutRepository;use Eccube\Repository\PageLayoutRepository;use Eccube\Repository\PaymentRepository;use Eccube\Repository\DeliveryRepository;use Eccube\Repository\Master\CsvTypeRepository;use Eccube\Repository\CsvRepository;use Plugin\AmazonPayV2\Entity\Master\AmazonStatus;use Plugin\AmazonPayV2\Entity\Config;use Plugin\AmazonPayV2\Form\Type\Master\ConfigTypeMaster as Master;use Plugin\AmazonPayV2\Service\Method\AmazonPay;use Eccube\Repository\PluginRepository;use Eccube\Service\PluginService;class PluginManager extends AbstractPluginManager{public function __construct(){goto T8_kE;yxxDu:$this->target_user_data = __DIR__ . '/../../../html/user_data';goto cS3rC;aj270:$this->origin_plugin_data = __DIR__ . '/Resource/PluginData';goto tiO6i;Q11zQ:$this->target_plugin_data = __DIR__ . '/../../PluginData/AmazonPayV2';goto yxxDu;T8_kE:$this->origin_css = __DIR__ . '/Resource/copy/css';goto aj270;tiO6i:$this->target_css = __DIR__ . '/../../../html/template/default/assets/css';goto Q11zQ;cS3rC:}public function install(array $config, ContainerInterface $container){goto cZmeK;Gp2PH:try {log_info("AmazonPayプラグイン(V2)インストールメール送信処理開始");$this->sendAutoMail($container, 'インストール');} catch (\Exception $e) {log_info("AmazonPayプラグイン(V2)インストールメール送信に失敗しました。" . $e->getMessage());}goto oVdex;iCWDK:$file = new Filesystem();goto DrbFl;qxwKd:$file->copy($this->origin_plugin_data . '/lastNameList.csv', $this->target_plugin_data . '/lastNameList.csv');goto V0Qft;DrbFl:if ($file->exists($this->target_plugin_data . '/lastNameList.csv')) {goto u3uiw;}goto qxwKd;V0Qft:u3uiw:goto W6kl2;oVdex:log_info("AmazonPayプラグイン(V2)インストールメール送信処理終了");goto cIVdj;cZmeK:$this->copyAssets($container);goto iCWDK;W6kl2:$this->setConfigIni();goto Gp2PH;cIVdj:}public function enable(array $config, ContainerInterface $container){goto YLdxK;JFU6V:$this->createConfigCsv($container);goto Fhsdb;C5_zL:$this->createPlgAmazonPayConfig($container);goto x7gtb;e2OPx:$PluginService->generateProxyAndUpdateSchema($Plugin, $config);goto qcNOw;BSyr2:$PluginService = $container->get('Eccube\\Service\\PluginService');goto fll57;qcNOw:$this->createAmazonPay($container);goto JFU6V;Fhsdb:$this->createAmazonPage($container);goto C5_zL;fll57:$Plugin = $PluginRepository->findByCode('AmazonPayV2');goto e2OPx;YLdxK:$PluginRepository = $container->get('Eccube\\Repository\\PluginRepository');goto BSyr2;x7gtb:$this->createPlgAmazonPayStatus($container);goto kb0_v;kb0_v:}public function disable(array $config, ContainerInterface $container){$this->disableAmazonPay($container);}public function uninstall(array $config, ContainerInterface $container){goto hcGAV;pR3NE:$file = new Filesystem();goto h9Wsv;Rmykc:log_info("AmazonPayプラグイン(V2)削除メール送信処理終了");goto AsWkQ;Hx26c:$this->removeConfigCsv($container);goto AF_c5;hcGAV:$this->removeAssets($container);goto pR3NE;TUpj4:try {log_info("AmazonPayプラグイン(V2)削除メール送信処理開始");$this->sendAutoMail($container, '削除');} catch (\Exception $e) {log_info("AmazonPayプラグイン(V2)削除メール送信に失敗しました。" . $e->getMessage());}goto Rmykc;AF_c5:$this->removeAmazonPage($container);goto TUpj4;h9Wsv:$file->remove($this->target_plugin_data . '/lastNameList.csv');goto Hx26c;AsWkQ:}public function update(array $config, ContainerInterface $container){$this->updateAssets($container);$this->createAmazonPage($container);}private function createAmazonPay(ContainerInterface $container){goto Z3pp5;w7fBv:$Payment = $paymentRepository->findOneBy([], ['sort_no' => 'DESC']);goto hblV1;CtmGT:$entityManage->persist($Payment);goto IAV8X;IAV8X:$entityManage->flush($Payment);goto C6GpI;IHUZ5:$Payment = new Payment();goto R38rl;hblV1:$sortNo = $Payment ? $Payment->getSortNo() + 1 : 1;goto IHUZ5;cxAuZ:if (!$Payment) {goto xzkgo;}goto m1594;np93O:$Payment->setSortNo($sortNo);goto DJZOl;kd6yX:$Payment = $paymentRepository->findOneBy(['method_class' => AmazonPay::class]);goto cxAuZ;FV76N:return;goto zuFMd;WgY4H:$paymentRepository = $entityManage->getRepository(Payment::class);goto kd6yX;pIi3q:$Payment->setRuleMin(0);goto CtmGT;isHOd:$Payment->setMethodClass(AmazonPay::class);goto pIi3q;cW2Zh:$entityManage->flush($Payment);goto FV76N;DJZOl:$Payment->setVisible(true);goto w8mwV;m1594:$Payment->setVisible(true);goto cW2Zh;zuFMd:xzkgo:goto w7fBv;w8mwV:$Payment->setMethod('Amazon Pay');goto isHOd;R38rl:$Payment->setCharge(0);goto np93O;Z3pp5:$entityManage = $container->get('doctrine.orm.entity_manager');goto WgY4H;C6GpI:}private function disableAmazonPay(ContainerInterface $container){goto fhREz;EgDzS:$Payment = $paymentRepository->findOneBy(['method_class' => AmazonPay::class]);goto pThO7;EjUIK:$Payment->setVisible(false);goto n_E51;fhREz:$entityManage = $container->get('doctrine.orm.entity_manager');goto gh6dh;gh6dh:$paymentRepository = $entityManage->getRepository(Payment::class);goto EgDzS;n_E51:$entityManage->flush($Payment);goto d7g6e;d7g6e:EY3Be:goto lvOIO;pThO7:if (!$Payment) {goto EY3Be;}goto EjUIK;lvOIO:}private function createConfigCsv(ContainerInterface $container){goto r5_Zx;AiEbe:BJkjT:goto beAPw;KEHbJ:$OrderCsvType = $csvTypeRepository->find(3);goto Jknak;U3bUT:$csvRepository = $entityManage->getRepository(Csv::class);goto KEHbJ;r5_Zx:$entityManage = $container->get('doctrine.orm.entity_manager');goto usYb0;lndGW:$arrCsv = [['entity_name' => 'Eccube\\Entity\\Order', 'field_name' => 'amazonpay_v2_charge_permission_id', 'reference_field_name' => null, 'disp_name' => 'Amazon参照ID'], ['entity_name' => 'Eccube\\Entity\\Order', 'field_name' => 'AmazonPayV2AmazonStatus', 'reference_field_name' => 'name', 'disp_name' => 'Amazon状況']];goto uCP6w;usYb0:$csvTypeRepository = $entityManage->getRepository(CsvType::class);goto U3bUT;uCP6w:foreach ($arrCsv as $c) {goto PM77D;b57KC:$Csv->setSortNo($sortNo++);goto ZNBTU;hmT8P:FTerv:goto p19j1;e_ZyH:$entityManage->persist($Csv);goto Fbq1s;PM77D:$Csv = $csvRepository->findOneBy(['disp_name' => $c['disp_name']]);goto yCZE4;EjHCI:$Csv->setEntityName($c['entity_name']);goto ZgQ_k;hTZLe:$Csv->setUpdateDate(new \DateTime());goto e_ZyH;zVJuH:$Csv->setDispName($c['disp_name']);goto b57KC;AxnFa:goto FTerv;goto pRJZR;p97lD:$Csv = new Csv();goto GH5KV;pRJZR:X_rba:goto p97lD;GH5KV:$Csv->setCsvType($OrderCsvType);goto EjHCI;yCZE4:if (!$Csv) {goto X_rba;}goto AxnFa;Fbq1s:$entityManage->flush($Csv);goto hmT8P;ZgQ_k:$Csv->setFieldName($c['field_name']);goto LEyBu;ZNBTU:$Csv->setCreateDate(new \DateTime());goto hTZLe;LEyBu:$Csv->setReferenceFieldName($c['reference_field_name']);goto zVJuH;p19j1:}goto AiEbe;Jknak:$LastCsv = $csvRepository->findOneBy(['CsvType' => $OrderCsvType], ['sort_no' => 'DESC']);goto Rxivd;Rxivd:$sortNo = $LastCsv->getSortNo();goto lndGW;beAPw:}private function removeConfigCsv(ContainerInterface $container){goto ko3_E;LO3vE:$csvRepository = $entityManage->getRepository(Csv::class);goto SZHEl;SZHEl:$OrderCsvType = $csvTypeRepository->find(3);goto HJaWB;HGum4:foreach ($arrCsv as $c) {goto E1E50;IVR3F:u2Edk:goto PFSXO;wV8w2:$entityManage->remove($Csv);goto ZZKOO;ZZKOO:$entityManage->flush();goto IVR3F;Zh8ye:if (!$Csv) {goto u2Edk;}goto wV8w2;E1E50:$Csv = $csvRepository->findOneBy($c);goto Zh8ye;PFSXO:iowS0:goto YjJ6g;YjJ6g:}goto zwZIe;ko3_E:$entityManage = $container->get('doctrine.orm.entity_manager');goto xUkdy;zwZIe:GF3VG:goto B7kWS;xUkdy:$csvTypeRepository = $entityManage->getRepository(CsvType::class);goto LO3vE;HJaWB:$arrCsv = [['entity_name' => 'Eccube\\Entity\\Order', 'field_name' => 'amazonpay_v2_charge_permission_id', 'reference_field_name' => null, 'disp_name' => 'Amazon参照ID'], ['entity_name' => 'Eccube\\Entity\\Order', 'field_name' => 'AmazonPayV2AmazonStatus', 'reference_field_name' => 'name', 'disp_name' => 'Amazon状況']];goto HGum4;B7kWS:}private function createAmazonPage(ContainerInterface $container){goto F46sb;xHGl3:$pageLayoutRepository = $entityManage->getRepository(PageLayout::class);goto nFwwH;uTQq3:$pageRepository = $entityManage->getRepository(Page::class);goto VbPcf;pr3QQ:$arrPage = [['page_name' => '商品購入(Amazon Pay)', 'url' => 'amazon_pay_shopping', 'file_name' => 'Shopping/index'], ['page_name' => '商品購入(Amazon Pay)/ご注文確認', 'url' => 'amazon_pay_shopping_confirm', 'file_name' => 'Shopping/confirm']];goto v61xf;p1cgx:$sortNo = $LastPageLayout->getSortNo();goto pr3QQ;F46sb:$entityManage = $container->get('doctrine.orm.entity_manager');goto uTQq3;KpeM0:$LastPageLayout = $pageLayoutRepository->findOneBy([], ['sort_no' => 'DESC']);goto p1cgx;v61xf:foreach ($arrPage as $p) {goto jCI0V;eMS60:$entityManage->persist($PageLayout);goto USm7n;L6Fca:$PageLayout->setLayout($Layout);goto TlqpU;h1nul:$Page = new Page();goto einvN;jCI0V:$Page = $pageRepository->findOneBy(['url' => $p['url']]);goto L0SfG;NJzYZ:$entityManage->flush($Page);goto MdfyP;einvN:$Page->setName($p['page_name']);goto sTEVr;XfYSl:$PageLayout->setPage($Page);goto HDX3i;j21JU:$entityManage->persist($Page);goto NJzYZ;TyQe6:goto HUjBg;goto m6Ddg;MdfyP:$PageLayout = new PageLayout();goto XfYSl;EM4dm:$Page->setUpdateDate(new \DateTime());goto TFarC;KAsvh:$PageLayout->setSortNo($sortNo++);goto eMS60;m6Ddg:A0qdL:goto h1nul;WNSt6:HUjBg:goto OhYOK;diB7m:$Page->setCreateDate(new \DateTime());goto EM4dm;TFarC:$Page->setMetaRobots('noindex');goto j21JU;wMNDf:$Page->setFileName($p['file_name']);goto Z0WhP;Z0WhP:$Page->setEditType(Page::EDIT_TYPE_DEFAULT);goto diB7m;USm7n:$entityManage->flush($PageLayout);goto WNSt6;sTEVr:$Page->setUrl($p['url']);goto wMNDf;TlqpU:$PageLayout->setLayoutId($Layout->getId());goto KAsvh;HDX3i:$PageLayout->setPageId($Page->getId());goto L6Fca;L0SfG:if (!$Page) {goto A0qdL;}goto TyQe6;OhYOK:}goto oL_9a;nFwwH:$Layout = $layoutRepository->find(2);goto KpeM0;oL_9a:QjjGa:goto AUQm1;VbPcf:$layoutRepository = $entityManage->getRepository(Layout::class);goto xHGl3;AUQm1:}private function removeAmazonPage(ContainerInterface $container){goto num5o;I1WTF:NjTIS:goto pE1N_;W3srW:$arrPage = [['name' => '商品購入(Amazon Pay)', 'url' => 'amazon_pay_shopping', 'file_name' => 'Shopping/index'], ['name' => '商品購入(Amazon Pay)/ご注文確認', 'url' => 'amazon_pay_shopping_confirm', 'file_name' => 'Shopping/confirm']];goto kjF00;num5o:$entityManage = $container->get('doctrine.orm.entity_manager');goto gj9WC;gj9WC:$pageRepository = $entityManage->getRepository(Page::class);goto W3srW;kjF00:foreach ($arrPage as $p) {goto QknuS;bBLZD:$entityManage->flush();goto YK4LQ;diH7h:xpTv1:goto tqeju;QknuS:$Page = $pageRepository->findOneBy($p);goto FeuXt;YK4LQ:lGAfx:goto diH7h;DzjpK:foreach ($Page->getPageLayouts() as $PageLayout) {goto YTxrB;ZBt7v:$entityManage->remove($PageLayout);goto dvLkB;dvLkB:$entityManage->flush($PageLayout);goto Dr0GY;Dr0GY:g13L3:goto eIAqk;YTxrB:$Page->removePageLayout($PageLayout);goto ZBt7v;eIAqk:}goto Efl8Y;Efl8Y:dLF8l:goto xBD6E;FeuXt:if (!$Page) {goto lGAfx;}goto DzjpK;xBD6E:$entityManage->remove($Page);goto bBLZD;tqeju:}goto I1WTF;pE1N_:}public function createPlgAmazonPayConfig(ContainerInterface $container){goto w0jKk;zj4FV:if (in_array($Config->getEnv(), $amazonPayEnvs)) {goto sZySQ;}goto ZP2Nd;UIoB3:$Config->setAmazonAccountMode(Master::ACCOUNT_MODE['SHARED']);goto LcBUK;He2x7:return;goto PGlNr;HamAn:$amazonPayEnvs = $container->getParameter('amazon_pay_v2')['env'];goto zj4FV;Qf40r:$Config->setMypageLoginButtonPlace(Master::MYPAGE_LOGIN_BUTTON_PLACE['AUTO']);goto b9t_J;b9t_J:$entityManage->persist($Config);goto al7rk;w0jKk:$entityManage = $container->get('doctrine.orm.entity_manager');goto tCzJ_;RJYQo:$Config->setMailNotices(null);goto t2Dw6;tCzJ_:$Config = $entityManage->find(Config::class, 1);goto NupOM;cFBNV:$Config->setUseMypageLoginButton(false);goto VEQHk;LcBUK:$Config->setEnv(Master::ENV['SANDBOX']);goto MiXPf;PGlNr:hH_Sy:goto bgLIz;qbB3Z:$Config->setAmazonAccountMode(2);goto zjjfR;WRjnJ:goto U14EN;goto AxiBA;mkJRA:$Config->setAmazonAccountMode(1);goto WRjnJ;NupOM:if (!$Config) {goto hH_Sy;}goto HamAn;MiXPf:$Config->setPrivateKeyPath('app/PluginData/AmazonPayV2/AmazonPay_*.pem');goto Q_urr;mfAIw:$Config->setCartButtonPlace(Master::CART_BUTTON_PLACE['AUTO']);goto cFBNV;Zxfqf:$entityManage->flush();goto He2x7;bgLIz:$Config = new Config();goto UIoB3;t2Dw6:$Config->setUseCartButton(true);goto G9SZq;X0qUp:$Config->setLoginRequired(false);goto GwwXE;AxiBA:sZySQ:goto qbB3Z;al7rk:$entityManage->flush($Config);goto k_0Z4;Q_urr:$Config->setSale(Master::SALE['AUTORI']);goto DtzrS;zjjfR:U14EN:goto Zxfqf;VEQHk:$Config->setMypageLoginButtonColor('Gold');goto Qf40r;ZP2Nd:$Config->setEnv(1);goto mkJRA;DtzrS:$Config->setUseConfirmPage(false);goto QcBPA;QcBPA:$Config->setAutoLogin(true);goto X0qUp;GwwXE:$Config->setOrderCorrect(true);goto RJYQo;G9SZq:$Config->setCartButtonColor('Gold');goto mfAIw;k_0Z4:}public function createPlgAmazonPayStatus(ContainerInterface $container){goto O9v87;cDccV:Tqilw:goto xfIoJ;NBxQx:$statuses = [AmazonStatus::AUTHORI => 'オーソリ', AmazonStatus::CAPTURE => '売上', AmazonStatus::CANCEL => '取消'];goto BGNAe;qiZp_:foreach ($statuses as $id => $name) {goto eeaya;qM12N:goto e0q3o;goto A3JPs;Ectb6:$AmazonStatus->setName($name);goto IHaAx;hMz3w:if (!$AmazonStatus) {goto USlkS;}goto qM12N;IP5Ux:$entityManage->flush($AmazonStatus);goto C4o4Z;x1God:$entityManage->persist($AmazonStatus);goto IP5Ux;A3JPs:USlkS:goto yIdtU;sQNmd:$AmazonStatus->setId($id);goto Ectb6;C4o4Z:e0q3o:goto Tsg0P;yIdtU:$AmazonStatus = new AmazonStatus();goto sQNmd;IHaAx:$AmazonStatus->setSortNo($i++);goto x1God;eeaya:$AmazonStatus = $entityManage->find(AmazonStatus::class, $id);goto hMz3w;Tsg0P:}goto cDccV;BGNAe:$i = 0;goto qiZp_;O9v87:$entityManage = $container->get('doctrine.orm.entity_manager');goto NBxQx;xfIoJ:}private function copyAssets(ContainerInterface $container){goto pVgFK;SUB6S:$file->mirror($this->origin_css, $this->target_css);goto suHp_;pVgFK:$file = new Filesystem();goto hEBFa;hEBFa:$file->mkdir($this->target_css);goto SUB6S;suHp_:}private function removeAssets(ContainerInterface $container){$file = new Filesystem();$file->remove($this->target_css . '/amazon_shopping_v2.css');}private function updateAssets(ContainerInterface $container){goto h1tMN;GshvA:if ($file->exists($this->target_plugin_data . '/lastNameList.csv')) {goto QNmc3;}goto qGeZU;qGeZU:$file->copy($this->origin_plugin_data . '/lastNameList.csv', $this->target_plugin_data . '/lastNameList.csv');goto KiTwT;KiTwT:QNmc3:goto ctF25;h1tMN:$file = new Filesystem();goto GshvA;ctF25:}public function sendAutoMail($container, $process){goto odVBr;pSs04:aUC47:goto vIhI6;D1Vrm:if (!(isset($_SERVER['HTTP_HOST']) && isset($_SERVER['REQUEST_URI']))) {goto aUC47;}goto vifR1;ZD7Kp:$baseInfoRepository = $entityManage->getRepository(BaseInfo::class);goto gJuSN;gJuSN:$BaseInfo = $baseInfoRepository->get();goto fYv8a;LoXMh:        $body = <<<__EOS__
Amazon Pay プラグインサポート各位

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
■　プラグイン{$process}のお知らせ　■
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

以下のECサイトでAmazon Pay V2 プラグインが{$process}されました。

【店名】{$BaseInfo->getShopName()}
【EC-CUBE】{$version}
【URL】{$url}
【メールアドレス】{$BaseInfo->getEmail01()}
【処理日時】{$datetime}


※本メールは、配信専用です。
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Amazon Pay　プラグインサポート
URL：https://www.iplogic.co.jp/lp/amazonpayments.html
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
__EOS__;
goto oHERp;cwMCD:$mailer->send($message);goto TPk56;tIhvd:$version = Constant::VERSION;goto LoXMh;odVBr:$entityManage = $container->get('doctrine.orm.entity_manager');goto ZD7Kp;vIhI6:$datetime = date('Y-m-d H:i:s');goto tIhvd;ZA_0_:$message->setSubject('[' . $BaseInfo->getShopName() . '] ' . 'プラグイン' . $process . '処理のお知らせ【Amazon Pay V2】')->setFrom([$BaseInfo->getEmail03() => $BaseInfo->getShopName()])->setTo(['amazon@iplogic.co.jp' => 'amazon'])->setBody($body);goto MnpG6;oHERp:$message = new \Swift_Message();goto ZA_0_;fYv8a:$url = '';goto D1Vrm;ApMJG:$url = substr($url, 0, strrpos($url, 'store') - 1);goto H1GzM;MnpG6:$transport = $container->get('swiftmailer.mailer.default.transport.real');goto DJjv7;DJjv7:$mailer = new \Swift_Mailer($transport);goto cwMCD;H1GzM:$url = substr($url, 0, strrpos($url, '/') + 1);goto pSs04;vifR1:$url = "http://" . $_SERVER["HTTP_HOST"] . $_SERVER['REQUEST_URI'];goto ApMJG;TPk56:}private function setConfigIni(){goto puISX;KU05F:$rand = \Eccube\Util\StringUtil::random();goto wU7z8;puISX:$eccubePlatform = env('ECCUBE_PLATFORM');goto MIE8F;MIE8F:if ($eccubePlatform === 'ec-cube.co') {goto Elsyd;}goto LzVCI;K3ADr:Elsyd:goto KU05F;wU7z8:file_put_contents(__DIR__ . '/amazon_pay_config.ini', "prefix = '{$rand}'");goto gQjVb;LzVCI:return;goto K3ADr;gQjVb:}}