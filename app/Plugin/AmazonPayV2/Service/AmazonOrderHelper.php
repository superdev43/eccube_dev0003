<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.3   |
    |              on 2021-07-20 10:45:27              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
namespace Plugin\AmazonPayV2\Service;use Doctrine\ORM\EntityManagerInterface;use Plugin\AmazonPayV2\Entity\Master\AmazonStatus;use Plugin\AmazonPayV2\Entity\AmazonTrading;use Plugin\AmazonPayV2\Exception\AmazonException;use Plugin\AmazonPayV2\Exception\AmazonPaymentException;use Plugin\AmazonPayV2\Exception\AmazonSystemException;use Plugin\AmazonPayV2\Repository\Master\AmazonStatusRepository;use Plugin\AmazonPayV2\Repository\ConfigRepository;use Plugin\AmazonPayV2\Service\Method\AmazonPay;use Plugin\AmazonPayV2\Service\AmazonRequestService;use Eccube\Common\Constant;use Eccube\Common\EccubeConfig;use Eccube\Entity\Customer;use Eccube\Entity\Order;use Eccube\Entity\Shipping;use Eccube\Entity\Master\CustomerStatus;use Eccube\Entity\Master\OrderStatus;use Eccube\Repository\CustomerRepository;use Eccube\Repository\BaseInfoRepository;use Eccube\Repository\PaymentRepository;use Eccube\Repository\PluginRepository;use Eccube\Repository\Master\CustomerStatusRepository;use Eccube\Repository\Master\OrderStatusRepository;use Eccube\Repository\Master\PrefRepository;use Eccube\Service\PurchaseFlow\PurchaseContext;use Eccube\Service\PurchaseFlow\Processor\StockReduceProcessor;use Eccube\Service\PurchaseFlow\Processor\PointProcessor;use Symfony\Component\HttpFoundation\Session\SessionInterface;use Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface;use Symfony\Component\Security\Core\Authentication\Token\UsernamePasswordToken;use Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface;use Symfony\Component\DependencyInjection\ContainerInterface;class AmazonOrderHelper{private $sessionAmazonProfileKey = 'amazon_pay_v2.profile';private $sessionAmazonShippingAddressKey = 'amazon_pay_v2.shipping_address';private $amazonSettings;private $pointProcessor;private $stockReduceProcessor;public function __construct(CustomerRepository $customerRepository, BaseInfoRepository $baseInfoRepository, PaymentRepository $paymentRepository, PluginRepository $pluginRepository, CustomerStatusRepository $customerStatusRepository, OrderStatusRepository $orderStatusRepository, EntityManagerInterface $entityManager, EccubeConfig $eccubeConfig, PrefRepository $prefRepository, SessionInterface $session, EncoderFactoryInterface $encoderFactory, TokenStorageInterface $tokenStorage, AmazonStatusRepository $amazonStatusRepository, ConfigRepository $configRepository, AmazonRequestService $amazonRequestService, StockReduceProcessor $stockReduceProcessor, PointProcessor $pointProcessor, ContainerInterface $container){goto ZxgBW;W82iH:$this->prefRepository = $prefRepository;goto Rjye4;uf4T0:$this->amazonStatusRepository = $amazonStatusRepository;goto wqT6z;zpjVC:$this->tokenStorage = $tokenStorage;goto uf4T0;Cwm3y:$this->stockReduceProcessor = $stockReduceProcessor;goto D86of;CByK_:$this->orderStatusRepository = $orderStatusRepository;goto TJtiN;Rjye4:$this->session = $session;goto ov65o;x5ePU:$this->amazonRequestService = $amazonRequestService;goto KeZj_;TJtiN:$this->entityManager = $entityManager;goto s9HME;ov65o:$this->encoderFactory = $encoderFactory;goto zpjVC;zbNMf:$this->pluginRepository = $pluginRepository;goto Y2Zon;EsAT0:$this->BaseInfo = $baseInfoRepository->get();goto MZcSH;s9HME:$this->eccubeConfig = $eccubeConfig;goto W82iH;Y2Zon:$this->customerStatusRepository = $customerStatusRepository;goto CByK_;ZxgBW:$this->customerRepository = $customerRepository;goto EsAT0;KeZj_:$this->Config = $this->configRepository->get();goto Cwm3y;D86of:$this->pointProcessor = $pointProcessor;goto Vz4h4;Vz4h4:$this->container = $container;goto xcvdp;wqT6z:$this->configRepository = $configRepository;goto x5ePU;MZcSH:$this->paymentRepository = $paymentRepository;goto zbNMf;xcvdp:}public function getOrderer($shippingAddress){goto QY1xD;f1_nD:$Customer->setName02('　');goto ZWqbq;QY1xD:$Customer = new Customer();goto XVeTM;dRreK:$Customer->setPref($Pref);goto CuEG3;CuEG3:$profile = unserialize($this->session->get($this->sessionAmazonProfileKey));goto PLqSk;n7GJk:$Customer->setKana02('　');goto YGDMw;PLqSk:$Customer->setEmail($profile->email);goto HUZMV;XVeTM:$Customer->setName01('　');goto f1_nD;ZWqbq:$Customer->setKana01('　');goto n7GJk;YGDMw:$Pref = $this->prefRepository->find(13);goto dRreK;HUZMV:$this->convert($Customer, $shippingAddress);goto JA4QH;JA4QH:return $Customer;goto nHWwE;nHWwE:}public function initializeAmazonOrder($Order, $Customer){goto LG8Na;tLWKG:return $Order;goto v90ru;LG8Na:$Payment = $this->paymentRepository->findOneBy(['method_class' => AmazonPay::class]);goto dJfNy;dJfNy:$Order->setPayment($Payment);goto J9ajH;zK0nF:$this->entityManager->persist($Order);goto tLWKG;J9ajH:$Order->setEmail($Customer->getEmail());goto zK0nF;v90ru:}public function convert($entity, $shippingAddress){goto imYxB;ayLy1:$offset = strlen(substr($convertAmznAddr1, 0, $matches[0][1]));goto jIwxN;B25eq:MlqRR:goto vqZaj;evGJD:$entity->setAddr01($addr01)->setAddr02($addr02);goto JMtdI;E0h9W:Bi7_s:goto aNm8z;V0295:goto XdDzd;goto E0h9W;nUB8G:goto q1mxc;goto CL27W;xfUcS:$entity->setKana01($arrName['kana01']);goto AzOnd;M6Qp8:goto q1mxc;goto Dh70r;j0oN9:if (!($shippingAddress->addressLine3 != '')) {goto NcYC6;}goto yMSqX;m12KP:yUyZ7:goto ayLy1;VUVCt:$email = $entity->getEmail();goto sxrv3;huWYW:goto eE2tO;goto ryONR;Q2R9n:$addr01 = $shippingAddress->city . $convertAmznAddr1;goto CEHy5;xTJ1x:$arrFixKana = $this->reviseKana($entity->getName01(), $entity->getName02(), $email);goto Y3lrT;JMtdI:$entity->setPhoneNumber(preg_replace('/(-|−)/', '', $shippingAddress->phoneNumber));goto NPRnj;HEm8R:PPf2r:goto Qse_O;AWcDt:goto Dhs9N;goto VidQY;Xm3TS:wgihR:goto VUVCt;hPmpg:$arrAmznAddr = ['PostalCode' => ' ', 'CountryCode' => '', 'StateOrRegion' => '', 'Name' => '', 'AddressLine1' => '', 'AddressLine2' => '', 'AddressLine3' => '', 'City' => '', 'Phone' => ''];goto HEm8R;AzOnd:$entity->setKana02('　');goto M6Qp8;iYDGl:$entity->setPref($Pref);goto levHg;HgAhN:$addr01 = $shippingAddress->stateOrRegion . $addr01;goto huWYW;VidQY:cZcSl:goto HejPi;hidX9:if ($entity instanceof Customer) {goto wgihR;}goto bzHXe;FVTqc:goto XAKxf;goto PICZk;v4P3L:$email = $Order->getEmail();goto Ob1Zs;eIV7s:$email = $entity->getEmail();goto FVTqc;jIwxN:$AddressLine1Front = mb_substr($convertAmznAddr1, 0, $offset);goto YsVDs;Ob1Zs:goto XAKxf;goto Xm3TS;yMSqX:$addr02 .= " " . $shippingAddress->addressLine3;goto C_fWv;hnESy:if (isset($arrName['kana01'])) {goto tNloF;}goto ORn3u;ryONR:i0XL7:goto iYDGl;dOuT4:if ($entity instanceof Shipping) {goto wl5HI;}goto hidX9;eJSSG:$convertAmznAddr2 = mb_convert_kana($shippingAddress->addressLine2, 'n', 'utf-8');goto VQQOs;gR3jE:if ($entity->getKana01() == null) {goto cZcSl;}goto Z28oK;Mu0BY:if (!empty($Pref)) {goto i0XL7;}goto OTSM3;HejPi:$entity->setKana01('　')->setKana02('　');goto TLKQB;Z28oK:goto Dhs9N;goto RDS1V;Bb8p2:UDPbB:goto A4Ycd;A4Ycd:switch ($shippingAddress->stateOrRegion) {case "東京":$shippingAddress->stateOrRegion = "東京都";goto MlqRR;case "大阪":$shippingAddress->stateOrRegion = "大阪府";goto MlqRR;case "京都":$shippingAddress->stateOrRegion = "京都府";goto MlqRR;case "東京都":goto MlqRR;case "大阪府":goto MlqRR;case "京都府":goto MlqRR;case "北海道":goto MlqRR;default:goto NSSA0;NSSA0:if (preg_match('/県$/u', $shippingAddress->stateOrRegion)) {goto yLMHf;}goto lswxq;lswxq:$shippingAddress->stateOrRegion .= '県';goto kRkzw;kRkzw:yLMHf:goto ZNTwM;ZNTwM:}goto m0WjG;Y3lrT:if (!empty($arrFixKana)) {goto VnSRJ;}goto gR3jE;PICZk:wl5HI:goto CXmDa;Ku5sf:$arrName = $this->divideName($shippingAddress->name);goto VQ0h0;zNQx3:$PostalCodeCount = preg_replace('/(-|−)/', '', $shippingAddress->postalCode);goto acOAH;ezZgW:if (!($this->Config->getOrderCorrect() == $this->eccubeConfig['amazon_pay_v2']['toggle']['on'])) {goto UDPbB;}goto Ip5le;imYxB:if (strpos($shippingAddress->postalCode, '-') !== false) {goto Bi7_s;}goto iEBwK;nBthi:$addr02 = $AddressLine1End . $convertAmznAddr2;goto Bsqks;VQ0h0:$entity->setName01($arrName['name01'])->setName02($arrName['name02']);goto hnESy;CEHy5:$addr02 = $convertAmznAddr2;goto GQYdz;GQYdz:goto IUhOr;goto m12KP;aNm8z:$arrPostalCode = explode('-', $shippingAddress->postalCode);goto TK_Pr;YsVDs:$AddressLine1End = mb_substr($convertAmznAddr1, $offset);goto yWFEv;C_fWv:NcYC6:goto jOcf4;jOcf4:$Pref = $this->prefRepository->findOneBy(['name' => $shippingAddress->stateOrRegion]);goto Mu0BY;ARNNi:$Pref = $this->prefRepository->find(13);goto RjJ8l;Dh70r:teKUN:goto wuiMe;RDS1V:VnSRJ:goto Pzo2L;Bsqks:IUhOr:goto j0oN9;i0auR:unset($arrPostalCode[0]);goto AM8R3;levHg:eE2tO:goto evGJD;xNMkG:q1mxc:goto ezZgW;ORn3u:if ($entity instanceof Shipping) {goto teKUN;}goto nUB8G;TK_Pr:XdDzd:goto zNQx3;Qse_O:$entity->setPostalCode(preg_replace('/(-|−)/', '', $shippingAddress->postalCode));goto Ku5sf;CL27W:tNloF:goto xfUcS;iEBwK:preg_match('/(\\d{3})(\\d{4})/', $shippingAddress->postalCode, $arrPostalCode);goto i0auR;AM8R3:$arrPostalCode = array_values($arrPostalCode);goto V0295;VQQOs:if (preg_match("/[0-9]/", $convertAmznAddr1, $matches, PREG_OFFSET_CAPTURE)) {goto yUyZ7;}goto Q2R9n;yWFEv:$addr01 = $shippingAddress->city . $AddressLine1Front;goto nBthi;vqZaj:$convertAmznAddr1 = mb_convert_kana($shippingAddress->addressLine1, 'n', 'utf-8');goto eJSSG;Ip5le:if ($entity instanceof Order) {goto wtu_o;}goto dOuT4;TVWC6:wtu_o:goto eIV7s;m0WjG:aajRd:goto B25eq;OTSM3:logs('amazon_pay_v2')->info('*** 都道府県マッチングエラー *** addr = ' . var_export($shippingAddress, true));goto ARNNi;acOAH:if (!(mb_strlen($PostalCodeCount) >= 9)) {goto PPf2r;}goto hPmpg;RjJ8l:$entity->setPref($Pref);goto HgAhN;sxrv3:XAKxf:goto xTJ1x;CXmDa:$Order = $entity->getOrder();goto v4P3L;bzHXe:goto XAKxf;goto TVWC6;wuiMe:$entity->setKana01('　')->setKana02('　');goto xNMkG;Pzo2L:$entity->setKana01($arrFixKana['kana01'])->setKana02($arrFixKana['kana02']);goto AWcDt;TLKQB:Dhs9N:goto Bb8p2;NPRnj:}public function divideName($name){goto M1Auj;Tx1gu:if (count($arrName) == 2) {goto ZERgY;}goto NTdH_;M1Auj:$arrResult = [];goto GA7WZ;lypxG:if (!empty($arrResult)) {goto swTtT;}goto bLtDo;Fzy8J:return $arrResult;goto FvwN7;GA7WZ:$arrName = preg_split('/[ 　]+/u', $name);goto Tx1gu;NQdG4:$arrResult = $arrFixName;goto QT4a_;VqzaL:$arrFixName = $this->reviseName($name);goto g8Vzg;NTdH_:$arrResult = $this->reviseLastNameList($name);goto lypxG;bLtDo:if (!($this->Config->getOrderCorrect() == $this->eccubeConfig['amazon_pay_v2']['toggle']['on'])) {goto uQza9;}goto VqzaL;u9S_Y:PD1Wm:goto NQdG4;tNcpY:$arrResult['name01'] = $name;goto dfI7_;fQgOL:$arrResult['name02'] = $arrName[1];goto ZpPUQ;CMe53:swTtT:goto qjdgv;GSzx1:ZERgY:goto wSSHT;Pd0zU:if (!empty($arrFixName)) {goto PD1Wm;}goto tNcpY;dfI7_:$arrResult['name02'] = '　';goto ySntf;qjdgv:goto s6tIE;goto GSzx1;A_ie8:wEmZB:goto CMe53;ySntf:goto wEmZB;goto u9S_Y;QT4a_:logs('amazon_pay_v2')->info('*** 名前補正 ***');goto A_ie8;wSSHT:$arrResult['name01'] = $arrName[0];goto fQgOL;ZpPUQ:s6tIE:goto Fzy8J;g8Vzg:uQza9:goto Pd0zU;FvwN7:}private function searchObject($search, $target, $objectName){goto C6G0S;Qi8Lk:$qb->andWhere('CONCAT(o.name01, o.name02) = :name')->setParameter('name', $search)->andWhere("TRIM(o.name02) <> ''");goto KQrzV;wLGQ3:if (!($target == 'name')) {goto eKqqh;}goto Qi8Lk;K16FM:return $qb->getQuery()->getResult();goto WB9F1;Cdz4u:$qb->select('o')->from('\\Eccube\\Entity' . "\\{$objectName}", 'o');goto wLGQ3;KQrzV:eKqqh:goto K16FM;C6G0S:$qb = $this->entityManager->createQueryBuilder();goto Cdz4u;WB9F1:}private function searchObjectByNameAndEmail($name01, $name02, $email, $target, $objectName){goto rr8dP;H6wDp:$qb->select('c')->from(Customer::class, 'c')->andWhere('c.name01 = :name01')->setParameter('name01', $name01)->andWhere('c.name02 = :name02')->setParameter('name02', $name02)->andWhere('c.email = :email')->setParameter('email', $email)->andWhere("c.kana01 <> ''")->andWhere("c.kana02 <> ''")->andWhere("c.v2_amazon_user_id <> ''")->orderBy('c.update_date', 'DESC');goto TM1Ck;Eq11M:return $qb->getQuery()->getResult();goto vNSq_;qlnQP:goto qcqWz;goto wOC_b;ULb4y:if (!($target == 'kana')) {goto twpAn;}goto JhGPj;cS69b:twpAn:goto Eq11M;HwfZ4:zLFwB:goto MXEWG;aPUtl:if ($objectName == 'Customer') {goto tH6BX;}goto qlnQP;VHpiP:tH6BX:goto H6wDp;TM1Ck:qcqWz:goto cS69b;qb593:goto qcqWz;goto VHpiP;FIZro:goto qcqWz;goto HwfZ4;MXEWG:$qb->select('s')->from(Shipping::class, 's')->leftJoin('s.Order', 'o')->andWhere('s.name01 = :name01')->setParameter('name01', $name01)->andWhere('s.name02 = :name02')->setParameter('name02', $name02)->andWhere('o.email = :email')->setParameter('email', $email)->andWhere("s.kana01 <> ''")->andWhere("s.kana02 <> ''")->andWhere("o.OrderStatus <> :status_pending")->setParameter('status_pending', OrderStatus::PENDING)->andWhere("o.OrderStatus <> :status_processing")->setParameter('status_processing', OrderStatus::PROCESSING)->andWhere("o.AmazonPayV2AmazonStatus IS NOT NULL")->orderBy('o.update_date', 'DESC');goto qb593;gxJ3T:if ($objectName == 'Shipping') {goto zLFwB;}goto aPUtl;rr8dP:$qb = $this->entityManager->createQueryBuilder();goto ULb4y;JhGPj:if ($objectName == 'Order') {goto im_mY;}goto gxJ3T;V9v8Y:$qb->select('o')->from(Order::class, 'o')->andWhere('o.name01 = :name01')->setParameter('name01', $name01)->andWhere('o.name02 = :name02')->setParameter('name02', $name02)->andWhere('o.email = :email')->setParameter('email', $email)->andWhere("o.kana01 <> ''")->andWhere("o.kana02 <> ''")->andWhere("o.OrderStatus <> :status_pending")->setParameter('status_pending', OrderStatus::PENDING)->andWhere("o.OrderStatus <> :status_processing")->setParameter('status_processing', OrderStatus::PROCESSING)->andWhere("o.AmazonPayV2AmazonStatus IS NOT NULL")->orderBy('o.update_date', 'DESC');goto FIZro;wOC_b:im_mY:goto V9v8Y;vNSq_:}public function reviseName($name){goto PiD7U;KiZux:LsIex:goto BHINX;BHINX:iwrR6:goto n6m0v;ziptJ:cmvyb:goto CDJ4e;PiD7U:$arrFixName = [];goto BnRjc;BnRjc:$Objects = $this->searchObject($name, 'name', 'Order');goto LR2WG;y3J4T:$Objects = $this->searchObject($name, 'name', 'Customer');goto KiZux;n6m0v:if (empty($Objects)) {goto cmvyb;}goto uYgNb;MJa_D:if (!empty($Objects)) {goto LsIex;}goto y3J4T;LR2WG:if (!empty($Objects)) {goto iwrR6;}goto yfiLC;cwWAx:$arrFixName['name02'] = $Objects[0]->getName02();goto ziptJ;CDJ4e:return $arrFixName;goto F4Y8_;yfiLC:$Objects = $this->searchObject($name, 'name', 'Shipping');goto MJa_D;uYgNb:$arrFixName['name01'] = $Objects[0]->getName01();goto cwWAx;F4Y8_:}public function reviseKana($name01, $name02, $email){goto jZgVI;zsBU4:return $arrFixKana;goto F7qXo;CyZXA:YFtIp:goto AR18B;OtGcq:$Objects = $this->searchObjectByNameAndEmail($name01, $name02, $email, 'kana', 'Order');goto Hfl_U;AR18B:cPjlG:goto XVSJ0;dU4p1:$arrFixKana['kana01'] = $Objects[0]->getKana01();goto RKmer;Jq8Kq:$Objects = $this->searchObjectByNameAndEmail($name01, $name02, $email, 'kana', 'Shipping');goto ZIn3l;sd3Tw:tFamx:goto zsBU4;lGTGH:$Objects = $this->searchObjectByNameAndEmail($name01, $name02, $email, 'kana', 'Customer');goto CyZXA;RKmer:$arrFixKana['kana02'] = $Objects[0]->getKana02();goto sd3Tw;XVSJ0:if (empty($Objects)) {goto tFamx;}goto dU4p1;jZgVI:$arrFixKana = [];goto OtGcq;ZIn3l:if (!empty($Objects)) {goto YFtIp;}goto lGTGH;Hfl_U:if (!empty($Objects)) {goto cPjlG;}goto Jq8Kq;F7qXo:}public function reviseLastNameList($name){goto AfhgG;VbGtU:fclose($fp);goto okpzy;FhL_4:$last_max_len = $cr_len;goto GQe3b;W3ZPZ:pQv9u:goto VbGtU;aUyg_:return null;goto x0o8s;W2T1s:$arrName['kana01'] = $row[1];goto nFrPw;G1I3y:hIJrP:goto FhL_4;diO6b:if (!($fp === false)) {goto d2hNS;}goto aUyg_;ppW6C:if (!(mb_strpos($name, $row[0], null, 'utf-8') === 0)) {goto HjKuh;}goto JVt3A;Q04_T:goto qEI3B;goto G1I3y;ja3Fb:if (!($last_max_len > $cr_len)) {goto hIJrP;}goto Q04_T;nFrPw:$arrName['kana02'] = '　';goto lDmi6;AvSEf:if (!(($row = fgetcsv($fp)) !== FALSE)) {goto pQv9u;}goto ppW6C;JVt3A:$cr_len = mb_strlen($row[0], 'utf-8');goto ja3Fb;GQe3b:$arrName['name01'] = $row[0];goto ZiQLq;okpzy:return $arrName;goto BE9HZ;ZiQLq:$arrName['name02'] = mb_substr($name, $cr_len, null, 'utf-8');goto W2T1s;vhvWS:$row = fgetcsv($fp);goto n7JEq;o8WDC:$arrName = null;goto ZY5sr;lDmi6:HjKuh:goto LauKP;x0o8s:d2hNS:goto o8WDC;LauKP:goto qEI3B;goto W3ZPZ;ZY5sr:$last_max_len = 0;goto vhvWS;AfhgG:$arrName = [];goto C9YMH;n7JEq:qEI3B:goto AvSEf;C9YMH:$fp = fopen($this->eccubeConfig['plugin_data_realdir'] . '/AmazonPayV2/lastNameList.csv', 'r');goto diO6b;BE9HZ:}public function copyToOrderFromCustomer(Order $Order, Customer $Customer){goto rwkNZ;P0q68:if (!$Customer->getId()) {goto QoiQc;}goto ABPvh;rwkNZ:if (!empty($Customer)) {goto SYPMp;}goto h00eD;BKzsO:$Order->setName01($Customer->getName01())->setName02($Customer->getName02())->setKana01($Customer->getKana01())->setKana02($Customer->getKana02())->setCompanyName($Customer->getCompanyName())->setEmail($Customer->getEmail())->setPhoneNumber($Customer->getPhoneNumber())->setPostalCode($Customer->getPostalCode())->setPref($Customer->getPref())->setAddr01($Customer->getAddr01())->setAddr02($Customer->getAddr02())->setSex($Customer->getSex())->setBirth($Customer->getBirth())->setJob($Customer->getJob());goto OUAIP;ABPvh:$Order->setCustomer($Customer);goto AhaOX;XcLl1:SYPMp:goto P0q68;AhaOX:QoiQc:goto BKzsO;h00eD:return;goto XcLl1;OUAIP:}public function completeCheckout(Order $Order, $amazonCheckoutSessionId){goto Oabl_;Q0Ulg:GMjUc:goto QIgyX;EKN0F:throw AmazonPaymentException::create(AmazonPaymentException::ZERO_PAYMENT);goto Q0Ulg;QIgyX:$response = $this->amazonRequestService->completeCheckoutSession($Order, $amazonCheckoutSessionId);goto Ja3C1;Oabl_:if (!($Order->getPaymentTotal() == 0)) {goto GMjUc;}goto EKN0F;Ja3C1:return $response;goto yriMe;yriMe:}public function setAmazonOrder(Order $Order, $chargePermissionId, $chargeId = null){goto SZx3C;ekV3k:if ($this->Config->getSale() == $this->eccubeConfig['amazon_pay_v2']['sale']['capture']) {goto s20a9;}goto BvFzM;pjRr7:$Order->setPaymentDate(new \DateTime());goto DfKK3;uVxU9:$Order->addAmazonPayV2AmazonTrading($AmazonTrading);goto d9Fls;UYKl0:goto u8Txa;goto w6BRa;YEWpZ:$AmazonTrading->setRefundCount(0);goto uVxU9;WbNM6:$billableAmount = floor($payment_total * 9);goto f_NVA;SZx3C:$Order->setAmazonPayV2ChargePermissionId($chargePermissionId);goto UusCA;wLm3n:$Order->setAmazonPayV2BillableAmount($billableAmount);goto Nb1Ou;syYhD:$AmazonTrading = new AmazonTrading();goto YdpLL;TSkcr:TSK06:goto rJVKc;YdpLL:$AmazonTrading->setOrder($Order);goto U2zSf;U2zSf:$AmazonTrading->setChargePermissionId($chargePermissionId);goto YiX8C;nC8pJ:if ($this->Config->getSale() == $this->eccubeConfig['amazon_pay_v2']['sale']['capture']) {goto TSK06;}goto wLm3n;Nb1Ou:goto wM9VK;goto TSkcr;f_NVA:NrSXN:goto nC8pJ;s3ksG:$Order->setAmazonPayV2AmazonStatus($AmazonStatus);goto n0PIb;UusCA:$AmazonStatus = $this->amazonStatusRepository->find($this->Config->getSale());goto s3ksG;DfKK3:wM9VK:goto syYhD;w9ed3:if ($payment_total * 9 > $this->eccubeConfig['amazon_pay_v2']['max_billable_amount']) {goto D0JXE;}goto vyzZ_;rJVKc:$Order->setAmazonPayV2BillableAmount($billableAmount - $payment_total);goto pjRr7;w6BRa:s20a9:goto zO9ZY;YiX8C:$AmazonTrading->setChargeId($chargeId);goto Qz550;n0PIb:$payment_total = (int) $Order->getPaymentTotal();goto w9ed3;r2rmC:u8Txa:goto YEWpZ;BvFzM:$AmazonTrading->setCaptureAmount(0);goto UYKl0;vyzZ_:$billableAmount = $payment_total + $this->eccubeConfig['amazon_pay_v2']['max_billable_amount'];goto wG3D0;iLbHR:D0JXE:goto WbNM6;zO9ZY:$AmazonTrading->setCaptureAmount($payment_total);goto r2rmC;wG3D0:goto NrSXN;goto iLbHR;Qz550:$AmazonTrading->setAuthoriAmount($payment_total);goto ekV3k;d9Fls:}public function registCustomer(Order $Order, $mail_magazine, $profile = null){goto xRcU1;Mt5X6:zk0gR:goto Tt_YA;g_jGN:$Customer = $this->customerRepository->newCustomer();goto EA70E;UL14f:$enc_password = $encoder->encodePassword($password, $salt);goto hcaR1;kNFsF:$Customer->setMailmagaFlg(true);goto VY6uW;B26hj:if (!$this->pluginRepository->findOneBy(['code' => 'MailMagazine4', 'enabled' => true])) {goto lsfVI;}goto EVTPD;EVTPD:if ($mail_magazine) {goto tbpfT;}goto YZMIj;GF_uB:$this->tokenStorage->setToken($token);goto nqAar;hcaR1:$secretKey = $this->customerRepository->getUniqueSecretKey();goto f100k;EA70E:$encoder = $this->encoderFactory->getEncoder($Customer);goto CVhGk;dEDEL:$Customer->setPostcarrierFlg(true);goto dmR0U;f100k:$Customer->setSalt($salt)->setPassword($enc_password)->setSecretKey($secretKey)->setPoint(0);goto y3CPB;UxGRc:goto wj9pH;goto NbUrO;IXm1D:return $password;goto gIi2o;QGo6i:goto N0Cr2;goto xH7ss;Tt_YA:$this->entityManager->persist($Customer);goto Q5sQw;xRcU1:logs('amazon_pay_v2')->info('*** 会員登録処理 start ***');goto enUFf;YZMIj:$Customer->setMailmagaFlg(false);goto UxGRc;Aj8IH:$password = $this->createPassword();goto UL14f;Q5sQw:$this->entityManager->flush();goto OEW99;A98iM:$Customer->setPostcarrierFlg(false);goto QGo6i;RhNs9:$Customer->setStatus($CustomerStatus);goto TL0LC;nqAar:logs('amazon_pay_v2')->info('*** 会員登録処理 end ***');goto IXm1D;Tyj3m:if (!$this->pluginRepository->findOneBy(['code' => 'PostCarrier4', 'enabled' => true])) {goto zk0gR;}goto lPP0s;enUFf:if ($profile) {goto vZJWe;}goto rAOZp;xH7ss:BqX57:goto dEDEL;TL0LC:$Customer->setName01($Order->getName01())->setName02($Order->getName02())->setPostalCode($Order->getPostalCode())->setEmail($Order->getEmail())->setPref($Order->getPref())->setAddr01($Order->getAddr01())->setAddr02($Order->getAddr02())->setPhoneNumber($Order->getPhoneNumber())->setV2AmazonUserId($profile->buyerId);goto B26hj;dmR0U:N0Cr2:goto Mt5X6;CVhGk:$salt = $encoder->createSalt();goto Aj8IH;lPP0s:if ($mail_magazine) {goto BqX57;}goto A98iM;VY6uW:wj9pH:goto ilLXZ;NbUrO:tbpfT:goto kNFsF;ilLXZ:lsfVI:goto Tyj3m;rAOZp:$profile = unserialize($this->session->get($this->sessionAmazonProfileKey));goto Xd4fw;OEW99:$token = new UsernamePasswordToken($Customer, null, 'customer', ['ROLE_USER']);goto GF_uB;Xd4fw:vZJWe:goto g_jGN;y3CPB:$CustomerStatus = $this->customerStatusRepository->find(CustomerStatus::REGULAR);goto RhNs9;gIi2o:}public function adminRequest($request, $Order){goto ptJsg;lFtkd:$this->pointProcessor->rollback($Order, new PurchaseContext());goto UWu2d;vHDq2:$Customer = $Order->getCustomer();goto cMLJE;sZcN_:mX38j:goto zBlZL;BG4O1:$allRefund_flg = true;goto DHwIV;LW4QO:$version = 'CV2';goto TAhoA;xmWez:yRpBE:goto uahcl;FmWB7:P1qJ3:goto t3Qu9;zNs3n:$amazonErr = 'CV1受注のリクエストを受け付けましたが、CV1が有効化されていません。';goto wWCJq;bbWSq:$allRefund_flg = false;goto XVE9L;VGirL:$cancel_flg = false;goto i2J23;Vj2Nh:oJVBu:goto Vgtlx;NDs2r:Z5xM7:goto BG4O1;qpc5C:OYUs1:goto vHDq2;ptJsg:$amazonErr = '';goto v8arz;Zwnjy:goto P8n9u;goto qpc5C;Znv3B:$version = 'CV1';goto fbIvc;kLbp9:if ($cancel_flg || $allRefund_flg) {goto yRpBE;}goto a70uS;zBlZL:gKwjJ:goto b4Vn4;wQE8r:if (isset($r->reasonCode)) {goto hXIpk;}goto AhtoX;lhpw0:foreach ($AmazonTradings as $key => $AmazonTrading) {goto EcMQ8;RA1ps:gLhJ_:goto CaNA3;KRImS:zyJ4j:goto UeVPX;DNmuZ:if ($request == 'capture') {goto ajYMw;}goto OcYl3;Q8UvE:MFNd0:goto xlU91;R7yNu:Bdf3O:goto pMfaN;dEkTI:$Order->addAmazonTrading($newAmazonTrading);goto lnc8T;OcYl3:if ($sumCaptureAmount == 0) {goto jZFt8;}goto pPN1U;t_plF:goto LFU8n;goto IdQ7e;pPN1U:if ($totalRefundAmount == 0) {goto gLhJ_;}goto ARLvj;SomTv:goto c49JG;goto SyROC;Yxowq:goto ttpQI;goto u7uQl;yanQO:ETRA0:goto wCf9u;xCaZP:$AmazonTrading->setRefundCount($refundCount);goto wgb0P;kAhOw:H5VSj:goto nQsO9;k5tj3:goto ttpQI;goto SowZj;FBkWO:oledc:goto QKXfw;Uy8kA:if (!isset($r->reasonCode)) {goto tonTh;}goto N_Y4w;nXLBT:$cancel_flg = true;goto Q8UvE;N_Y4w:logs('amazon_pay_v2')->error('aws request error from admin_order r=' . var_export($r, true));goto SomTv;YMbGQ:goto UvXbm;goto FBkWO;SyROC:tonTh:goto KDF32;qbaNb:cH0CV:goto BIPJB;UeVPX:$r = false;goto yanQO;g7bDg:RlK0n:goto YII9j;uBkzy:$newAmazonTrading->setRefundCount(0);goto dEkTI;gBCI9:$billableAmount = $billableAmount - $billingAmount;goto o_DPK;jCrHy:fyxo5:goto gjcmt;SowZj:iPCoA:goto K_CIg;YII9j:Ff629:goto F1HN0;nxUYZ:$addAmount = $totalBillingAmount;goto YMbGQ;K_CIg:$amazonChargePermissionId = $AmazonTrading->getChargePermissionId();goto G4xTb;luDNz:$captureAmount = $AmazonTrading->getCaptureAmount();goto nSf04;u7uQl:oFGam:goto MxVuY;gjcmt:$AmazonTrading->setCaptureAmount($billingAmount);goto eE1bl;Nh8RU:logs('amazon_pay_v2')->error('aws request error from admin_order r = ' . var_export($r, true));goto UcSjc;i5n8u:goto MFNd0;goto iiO8S;AoXzl:goto LFU8n;goto qbaNb;w0432:Y5Qst:goto i5n8u;cvOsT:$billingAmount = $authoriAmount > $totalBillingAmount ? $totalBillingAmount : $authoriAmount;goto tC5N6;uRXty:LFU8n:goto wpB1l;xlU91:goto H5VSj;goto VBW18;AcjYZ:$newAmazonTrading->setAuthoriAmount($addAmount);goto lKOLG;pOncK:TpNqG:goto D88fy;rzx1I:$newAmazonChargeId = $r->chargeId;goto hpIkK;kth8b:if ($version == 'CV1') {goto cH0CV;}goto CI6CZ;EcMQ8:if ($version == 'CV1') {goto oFGam;}goto iHuYe;KDF32:$totalBillingAmount = $totalBillingAmount - $addAmount;goto kth8b;wCf9u:if (!($payment_total > $sumAuthoriAmount && $amazon_status == 'オーソリ' || $totalBillingAmount > 0 && $amazon_status == '売上')) {goto HnXvx;}goto KmQ3Q;CI6CZ:if ($version == 'CV2') {goto WuM4T;}goto AoXzl;DkvYp:$refundCount = $refundCount + 1;goto hzUtS;dac8A:HnXvx:goto kAhOw;MxVuY:$amazonChargeId = substr_replace($AmazonTrading->getTradingCode(), "C", 20, 1);goto mTcHh;pMfaN:if (!isset($r->chargeId)) {goto k3_Ft;}goto rzx1I;TmTSi:$newAmazonTrading->setCaptureamount($addAmount);goto uBkzy;QKXfw:$addAmount = $payment_total - $sumAuthoriAmount;goto H1wD9;wgb0P:$this->entityManager->flush($AmazonTrading);goto ml23C;F1HN0:if (!isset($r->reasonCode)) {goto TpNqG;}goto Nh8RU;D88fy:$AmazonTrading->setCaptureAmount($captureAmount - $refundAmount);goto xCaZP;mTcHh:$amazonChargePermissionId = $Order->getReferenceCode();goto k5tj3;ExXYx:$newAmazonTrading->setOrder($Order);goto m9coA;ixKxS:$Order->addAmazonPayV2AmazonTrading($newAmazonTrading);goto uRXty;Sa1Vr:$totalBillingAmount = $totalBillingAmount - $billingAmount;goto gBCI9;hzUtS:if (!($refundAmount > 0)) {goto Ff629;}goto vzL1J;g0HT3:if (!($version == 'CV2')) {goto RlK0n;}goto UYs6x;CO9Ky:if ($captureAmount > 0 || $totalBillingAmount == 0) {goto zyJ4j;}goto cvOsT;ARLvj:$refundAmount = $captureAmount > $totalRefundAmount ? $totalRefundAmount : $captureAmount;goto DkvYp;IXAEi:$newAmazonTrading = new AmazonTrading();goto ExXYx;HV_oY:$newAmazonTrading->setRefundCount(0);goto ixKxS;VBW18:ajYMw:goto CO9Ky;du3bU:if (!(isset($r->reasonCode) && $r === 'status_failed')) {goto Bdf3O;}goto Xdkt_;PYLlh:goto c49JG;goto R7yNu;hpIkK:$r = $this->amazonRequestService->captureCharge($newAmazonChargeId, $Order, $addAmount);goto Uy8kA;X_jaO:$r = $this->amazonRequestService->closeChargePermission($amazonChargePermissionId);goto nXLBT;wpB1l:$this->entityManager->persist($newAmazonTrading);goto T9b3E;eE1bl:$this->entityManager->flush($AmazonTrading);goto VhDz8;tC5N6:$r = $this->amazonRequestService->captureCharge($amazonChargeId, $Order, $billingAmount);goto jlMfp;VhDz8:if (!($version == 'CV1')) {goto rb5nW;}goto Sa1Vr;vzL1J:$r = $this->amazonRequestService->createRefund($amazonChargeId, $refundAmount);goto g0HT3;lnc8T:$billableAmount = $billableAmount - $addAmount;goto t_plF;G4xTb:$amazonChargeId = $AmazonTrading->getChargeId();goto iNuWz;UYs6x:$AmazonTrading->setRefundId($r->refundId);goto g7bDg;P9bHZ:$newAmazonTrading->setAuthoriAmount($addAmount);goto TmTSi;KmQ3Q:if ($amazon_status == 'オーソリ') {goto oledc;}goto nxUYZ;H1wD9:UvXbm:goto nv1OV;iiO8S:jZFt8:goto X_jaO;BIPJB:$newAmazonTrading = new \Plugin\AmazonPay\Entity\AmazonTrading();goto SPzSW;nQsO9:RvsPe:goto Co2HQ;iHuYe:if ($version == 'CV2') {goto iPCoA;}goto Yxowq;hiC86:goto ETRA0;goto KRImS;TBpsr:$authoriAmount = $AmazonTrading->getAuthoriAmount();goto luDNz;IdQ7e:WuM4T:goto IXAEi;o_DPK:rb5nW:goto hiC86;K3qfa:goto c49JG;goto jCrHy;LOg0_:goto Y5Qst;goto RA1ps;jlMfp:if (!isset($r->reasonCode)) {goto fyxo5;}goto LPgU_;Xdkt_:logs('amazon_pay_v2')->error('aws request error from admin_order r=' . var_export($r, true));goto PYLlh;lKOLG:$newAmazonTrading->setCaptureamount($addAmount);goto HV_oY;ml23C:$totalRefundAmount = $totalRefundAmount - $refundAmount;goto LOg0_;m9coA:$newAmazonTrading->setChargePermissionId($r->chargePermissionId);goto TjA4P;LVcVE:$newAmazonTrading->setTradingCode($newAmazonChargeId);goto P9bHZ;TjA4P:$newAmazonTrading->setChargeId($newAmazonChargeId);goto AcjYZ;LPgU_:logs('amazon_pay_v2')->error('aws request error from admin_order r=' . var_export($r, true));goto K3qfa;iNuWz:ttpQI:goto TBpsr;SPzSW:$newAmazonTrading->setOrder($Order);goto LVcVE;T9b3E:$this->entityManager->flush($newAmazonTrading);goto BQ40o;CaNA3:goto RvsPe;goto w0432;nv1OV:$r = $this->amazonRequestService->createCharge($amazonChargePermissionId, $addAmount);goto du3bU;UcSjc:goto c49JG;goto pOncK;BQ40o:k3_Ft:goto dac8A;nSf04:$refundCount = $AmazonTrading->getRefundCount();goto DNmuZ;Co2HQ:}goto YvBDi;io9Yi:if (!$Customer) {goto hVhTu;}goto p9Edw;i2J23:$totalRefundAmount = $allRefund_flg ? $payment_total : $sumCaptureAmount - $payment_total;goto q0jmC;GOx6Q:e5_Lg:goto w6n_2;EYnFt:goto nZp5G;goto cWRs3;OlI2J:$billableAmount = $Order->getBillableAmount();goto RvyKX;QGFQr:$amazonStatusRepositoryV1 = $this->container->get(\Plugin\AmazonPay\Repository\Master\AmazonStatusRepository::class);goto bfim8;YCJmj:MmLvA:goto LWJ0E;Xqa1v:goto MmLvA;goto hSltb;bfim8:WAguV:goto kLbp9;t3Qu9:return $amazonErr;goto VXxmj;saB3o:$Customer->setPoint(intval($Customer->getPoint()) - intval($Order->getAddPoint()));goto lFtkd;Pxz51:$AmazonStatus = $amazonStatusRepositoryV1->find(AmazonStatus::CANCEL);goto VsT8O;elmdA:if ($r === false) {goto W_eF_;}goto h00oU;uMk37:$AmazonStatus = $amazonStatusRepositoryV1->find(AmazonStatus::CAPTURE);goto YyBnM;oLCvD:hVhTu:goto CEfca;pgSe0:if ($Order->getPaymentMethod() === 'Amazon Pay') {goto oJVBu;}goto jeNd0;VsT8O:goto mX38j;goto fo2y2;AhtoX:if (is_object($r)) {goto aSDBZ;}goto elmdA;sj7iz:goto pP9VY;goto VyQuQ;A3i5T:$sumCaptureAmount = 0;goto snOi_;jeNd0:goto pZj6G;goto duiR_;i0LFF:$sumAuthoriAmount = 0;goto A3i5T;Zlf3L:goto IjQxl;goto cZYsY;WtHYo:$AmazonTradings = $Order->getAmazonTradings();goto y4jAl;pzsxn:goto MmLvA;goto GOx6Q;RsO2j:hXIpk:goto ZJWAR;TAhoA:pZj6G:goto i0LFF;YvBDi:c49JG:goto wQE8r;RH3R2:$billableAmount = $Order->getAmazonPayV2BillableAmount();goto sevK6;y8sru:$Order->setBillableAmount($billableAmount);goto uMk37;UNJdf:$Order->setAmazonPayV2AmazonStatus($AmazonStatus);goto YCJmj;uSJgg:$this->stockReduceProcessor->rollback($Order, new PurchaseContext());goto D4b0b;cMLJE:if (!$Customer) {goto okdEj;}goto saB3o;b4Vn4:if ($version == 'CV1') {goto e5_Lg;}goto qF1Na;Kgcjl:$Order->setAmazonPayV2BillableAmount($billableAmount);goto Mm3Hb;XVE9L:goto YDfP6;goto NDs2r;qF1Na:if ($version == 'CV2') {goto bHymo;}goto pzsxn;cZYsY:W_eF_:goto ZWTLt;ijXY9:$AmazonStatus = $this->amazonStatusRepository->find(AmazonStatus::CANCEL);goto sZcN_;p9Edw:$this->pointProcessor->rollback($Order, new PurchaseContext());goto oLCvD;D4b0b:$Customer = $Order->getCustomer();goto io9Yi;fbIvc:goto pZj6G;goto Vj2Nh;YyBnM:goto nZp5G;goto yzz7X;LWJ0E:$this->entityManager->flush();goto WEDSU;XIE0C:if ($version == 'CV1') {goto SoWSx;}goto WVTBA;SwJNs:if ($version == 'CV2') {goto KJkPJ;}goto xFaRT;JJ_s6:mbpZP:goto v0GIN;IzdYx:if (!($version == 'CV1')) {goto WAguV;}goto QGFQr;tRijJ:nZp5G:goto exUDv;kEsHG:$totalBillingAmount = $payment_total - $sumCaptureAmount;goto uhzE1;uhzE1:if ($request == 'cancel' && $payment_total == $sumCaptureAmount) {goto Z5xM7;}goto bbWSq;hA9vq:if ($version == 'CV1') {goto UpVZS;}goto WwW6j;YNyrl:if (!($Order->getOrderStatus()->getId() != $OrderStatus->getId())) {goto si0Lt;}goto uSJgg;hSltb:bHymo:goto UNJdf;v0GIN:$payment_total = (int) $Order->getPaymentTotal();goto XIE0C;JHaNc:if ($V1Enable_flg) {goto tnyBX;}goto zNs3n;WVTBA:if ($version == 'CV2') {goto Ya5Nf;}goto sj7iz;kKQyw:goto P1qJ3;goto RsO2j;pcQBc:tnyBX:goto WtHYo;q0jmC:$resultAmazonTradingInfo = [];goto lhpw0;wWCJq:return $amazonErr;goto pcQBc;RvyKX:goto pP9VY;goto Hl5bf;iCNRm:$Order->setOrderStatus($OrderStatus);goto Katf3;fo2y2:KJkPJ:goto ijXY9;WEDSU:jtJ0q:goto kKQyw;Vgtlx:$AmazonTradings = $Order->getAmazonPayV2AmazonTradings();goto fLF2X;xFaRT:goto mX38j;goto vPB7p;l8TMV:$V1Enable_flg = $this->pluginRepository->findOneBy(array('code' => 'AmazonPay', 'enabled' => Constant::ENABLED));goto JHaNc;a70uS:$Order->setPaymentDate(new \DateTime());goto hA9vq;sevK6:pP9VY:goto kEsHG;Mm3Hb:$AmazonStatus = $this->amazonStatusRepository->find(AmazonStatus::CAPTURE);goto tRijJ;PZkYu:if ($Order->getPaymentMethod() === 'AmazonPay') {goto emRoK;}goto pgSe0;Katf3:if ($version == 'CV1') {goto H_2SA;}goto SwJNs;Hl5bf:Ya5Nf:goto RH3R2;ZJWAR:$amazonErr = "下記のエラーが発生しました。\n" . "リクエストを受け付けないため処理を終了しました。\n";goto FmWB7;v8arz:$version = '';goto PZkYu;Umblb:goto jtJ0q;goto iVwKK;CEfca:si0Lt:goto Zwnjy;h00oU:$amazonErr = "下記のエラーが発生しました。\n" . var_export($r, true) . "\n";goto Zlf3L;iO1vR:if ($Order->getOrderStatus()->getId() == OrderStatus::DELIVERED) {goto OYUs1;}goto YNyrl;vPB7p:H_2SA:goto Pxz51;fLF2X:$amazon_status = $Order->getAmazonPayV2AmazonStatus()->getName();goto LW4QO;w6n_2:$Order->setAmazonStatus($AmazonStatus);goto Xqa1v;VyQuQ:SoWSx:goto OlI2J;UWu2d:okdEj:goto b6sME;exUDv:goto gKwjJ;goto xmWez;duiR_:emRoK:goto l8TMV;ZWTLt:IjQxl:goto Umblb;DHwIV:YDfP6:goto VGirL;uahcl:$OrderStatus = $this->orderStatusRepository->find($this->orderStatusRepository->find(OrderStatus::CANCEL));goto iO1vR;y4jAl:$amazon_status = $Order->getAmazonStatus()->getName();goto Znv3B;b6sME:P8n9u:goto iCNRm;snOi_:foreach ($AmazonTradings as $AmazonTrading) {goto r0rvE;k0UUL:$sumCaptureAmount += $AmazonTrading->getCaptureAmount();goto XrG9u;XrG9u:kczLI:goto RV9JN;r0rvE:$sumAuthoriAmount += $AmazonTrading->getAuthoriAmount();goto k0UUL;RV9JN:}goto JJ_s6;iVwKK:aSDBZ:goto IzdYx;yzz7X:d1086:goto Kgcjl;WwW6j:if ($version == 'CV2') {goto d1086;}goto EYnFt;cWRs3:UpVZS:goto y8sru;VXxmj:}public function checkShippingPref($shippingAddress){goto wsB8w;rGp2V:rw2Ml:goto WVQWz;SsQoR:gGQLx:goto uYbkx;uYbkx:$Pref = $this->prefRepository->findOneBy(['name' => $shippingAddress->stateOrRegion]);goto WbqGi;LVY9U:logs('amazon_pay_v2')->info('*** 都道府県マッチングエラー *** addr = ' . var_export($shippingAddress, true));goto kb4vg;WbqGi:if (!empty($Pref)) {goto rw2Ml;}goto LVY9U;zo1v0:u2CJU:goto SsQoR;WVQWz:return true;goto SJG5h;wsB8w:switch ($shippingAddress->stateOrRegion) {case "東京":$shippingAddress->stateOrRegion = "東京都";goto gGQLx;case "大阪":$shippingAddress->stateOrRegion = "大阪府";goto gGQLx;case "京都":$shippingAddress->stateOrRegion = "京都府";goto gGQLx;case "東京都":goto gGQLx;case "大阪府":goto gGQLx;case "京都府":goto gGQLx;case "北海道":goto gGQLx;default:goto g14ZI;Rt4c9:cdWei:goto P53u3;g14ZI:if (preg_match('/県$/u', $shippingAddress->stateOrRegion)) {goto cdWei;}goto JhbQb;JhbQb:$shippingAddress->stateOrRegion .= '県';goto Rt4c9;P53u3:}goto zo1v0;kb4vg:return false;goto rGp2V;SJG5h:}public function createPassword($length = 8){goto wxfEY;wxfEY:$pwd = [];goto pBR1G;cpaXT:b_jFW:goto H4Vhh;pBR1G:$pwd_strings = ["sletter" => range('a', 'z'), "cletter" => range('A', 'Z'), "number" => range('0', '9')];goto emdYx;NJfVI:$pwd[] = $pwd_strings[$key][array_rand($pwd_strings[$key])];goto hYvQb;uDsXb:if (!(count($pwd) < $length)) {goto b_jFW;}goto iKBc4;iKBc4:$key = array_rand($pwd_strings);goto NJfVI;H4Vhh:shuffle($pwd);goto NlR4T;hYvQb:goto tWFxK;goto cpaXT;emdYx:tWFxK:goto uDsXb;NlR4T:return implode($pwd);goto nwJXx;nwJXx:}}