<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.3   |
    |              on 2021-07-20 10:45:27              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
namespace Plugin\AmazonPayV2\Service;use Doctrine\ORM\EntityManagerInterface;use Plugin\AmazonPayV2\Entity\Master\AmazonStatus;use Plugin\AmazonPayV2\Entity\AmazonTrading;use Plugin\AmazonPayV2\Repository\ConfigRepository;use Plugin\AmazonPayV2\Service\AmazonOrderHelper;use Plugin\AmazonPayV2\Service\AmazonRequestService;use Eccube\Common\EccubeConfig;use Eccube\Entity\Master\OrderStatus;use Eccube\Repository\CustomerRepository;use Eccube\Repository\OrderRepository;use Eccube\Repository\Master\OrderStatusRepository;use Eccube\Service\MailService;use Eccube\Service\PurchaseFlow\PurchaseFlow;use Eccube\Service\PurchaseFlow\PurchaseContext;use Symfony\Component\DependencyInjection\ContainerInterface;use Symfony\Component\Routing\RouterInterface;use Symfony\Component\Routing\Generator\UrlGeneratorInterface;use Doctrine\DBAL\LockMode;class AmazonIPNService{private $sessionAmazonProfileKey = 'amazon_pay_v2.profile';private $sessionAmazonCheckoutSessionIdKey = 'amazon_pay_v2.checkout_session_id';private $sessionAmazonCustomerParamKey = 'amazon_pay_v2.customer_regist_v2';protected $orderRepository;protected $entityManager;public function __construct(EccubeConfig $eccubeConfig, MailService $mailService, CustomerRepository $customerRepository, OrderRepository $orderRepository, OrderStatusRepository $orderStatusRepository, EntityManagerInterface $entityManager, PurchaseFlow $shoppingPurchaseFlow, ConfigRepository $configRepository, AmazonOrderHelper $amazonOrderHelper, AmazonRequestService $amazonRequestService, ContainerInterface $container){goto gHNey;OLG1O:$this->Config = $this->configRepository->get();goto KH5Ah;GO0Kd:$this->orderRepository = $orderRepository;goto ARySz;avFbz:$this->container = $container;goto OLG1O;cFrdl:$this->entityManager = $entityManager;goto SNeiH;pcScw:$this->mailService = $mailService;goto VdNPG;ARySz:$this->orderStatusRepository = $orderStatusRepository;goto cFrdl;VdNPG:$this->customerRepository = $customerRepository;goto GO0Kd;SNeiH:$this->purchaseFlow = $shoppingPurchaseFlow;goto wfp5D;HUxUX:$this->amazonRequestService = $amazonRequestService;goto avFbz;gHNey:$this->eccubeConfig = $eccubeConfig;goto pcScw;jrobi:$this->amazonOrderHelper = $amazonOrderHelper;goto HUxUX;wfp5D:$this->configRepository = $configRepository;goto jrobi;KH5Ah:}public function mainProcess($arrParam){goto SVJpE;xxE1o:if ($arrParam['ObjectType'] == 'REFUND') {goto TVNXI;}goto VYzhs;mTBFq:logs('amazon_pay_v2')->info('AmazonIPNService::初回注文処理 end');goto yyZfM;H3pmE:$Order = $this->getFirstOrder($arrParam, $chargeResponse);goto P621p;xIVNZ:logs('amazon_pay_v2')->info('AmazonIPNService::返金処理 end');goto IN2LZ;yyZfM:ex7hd:goto ab3hl;VYzhs:goto SixJj;goto r85oN;zFGy3:logs('amazon_pay_v2')->info('AmazonIPNService::売上キャンセル処理 end');goto eCgcb;JdIIw:oVG60:goto GWQ2X;oRzTc:logs('amazon_pay_v2')->info('AmazonIPNService::売上請求処理 start');goto aIzw2;LT3kj:logs('amazon_pay_v2')->info('AmazonIPNService::売上キャンセル処理 start');goto zFGy3;qj0i8:logs('amazon_pay_v2')->info('AmazonIPNService::初回注文処理 start');goto qO8sI;qO8sI:$this->firstOrderProcess($Order);goto mTBFq;y7lL8:opPs8:goto WeCEx;r85oN:QbgAw:goto lUmBm;cqDPP:$objectId = $arrParam['ObjectId'];goto KpSM2;WeCEx:if (!($chargeResponseState == 'Canceled' && in_array($objectId, $arrChargeId))) {goto fhYdM;}goto LT3kj;GWQ2X:goto SixJj;goto FvrlG;s20nN:j7Lcj:goto FL7Vi;ab3hl:$Order = $this->getOrder($arrParam, $chargeResponse);goto nMIOZ;BtkJm:return null;goto LfTI4;eCgcb:fhYdM:goto JdIIw;tkUKw:$chargeResponseState = $chargeResponse->statusDetails->state;goto H3pmE;nMIOZ:if (!$Order) {goto oVG60;}goto Mkezj;lObyk:foreach ($AmazonTradings as $AmazonTrading) {$arrChargeId[] = $AmazonTrading->getChargeId();hauq2:}goto s20nN;Mkezj:$AmazonTradings = $Order->getAmazonPayV2AmazonTradings();goto VlCkI;VlCkI:$arrChargeId = [];goto lObyk;lUmBm:$chargeResponse = $this->amazonRequestService->getCharge($objectId);goto tkUKw;aIzw2:logs('amazon_pay_v2')->info('AmazonIPNService::売上請求処理 end');goto y7lL8;SVJpE:if (!($this->Config->getSellerId() != $arrParam['MerchantID'])) {goto GDcoB;}goto BtkJm;HErlb:logs('amazon_pay_v2')->info('AmazonIPNService::返金処理 start');goto xIVNZ;KpSM2:if ($arrParam['ObjectType'] == 'CHARGE') {goto QbgAw;}goto xxE1o;P621p:if (!($Order && ($chargeResponseState == 'Authorized' || $chargeResponseState == 'Captured') && $Order->getAmazonPayV2SessionTemp())) {goto ex7hd;}goto qj0i8;FvrlG:TVNXI:goto HErlb;LfTI4:GDcoB:goto cqDPP;FL7Vi:if (!($chargeResponseState == 'Captured' && !in_array($objectId, $arrChargeId))) {goto opPs8;}goto oRzTc;IN2LZ:SixJj:goto rr6rO;rr6rO:}public function getOrder($arrParam, $response){$Order = $this->orderRepository->findOneBy(['amazonpay_v2_charge_permission_id' => $arrParam['ChargePermissionId'], 'AmazonPayV2AmazonStatus' => [AmazonStatus::AUTHORI, AmazonStatus::CAPTURE], 'OrderStatus' => [OrderStatus::NEW, OrderStatus::PAID]]);return $Order;}public function getFirstOrder($arrParam, $response){goto GISkg;oduel:$iniFile = dirname(__FILE__) . '/../amazon_pay_config.ini';goto rmXSZ;iPqY2:$arrInit = parse_ini_file($iniFile);goto KQCHU;GISkg:$Order = $this->orderRepository->findOneBy(['amazonpay_v2_charge_permission_id' => $arrParam['ChargePermissionId'], 'payment_total' => (int) $response->chargeAmount->amount, 'OrderStatus' => OrderStatus::PENDING]);goto fpotB;GJx13:dnNR7:goto zLckF;dx9WL:if (!$prefix) {goto ui6Me;}goto prNCn;zLckF:$prefix = $prefix === '' ? '' : $prefix . '_';goto AuwQD;Uq8v1:$Order = $this->orderRepository->findOneBy(['id' => $order_id, 'payment_total' => (int) $response->chargeAmount->amount, 'OrderStatus' => OrderStatus::PENDING]);goto SHxTX;rmXSZ:if (!file_exists($iniFile)) {goto dnNR7;}goto iPqY2;SHxTX:mK2MG:goto ZEMUy;AuwQD:$order_id = $response->merchantMetadata->merchantReferenceId;goto dx9WL;prNCn:$order_id = str_replace($prefix, '', $order_id);goto zila6;Uhwok:$prefix = '';goto oduel;zila6:ui6Me:goto Uq8v1;ZEMUy:return $Order;goto vtRzt;fpotB:if ($Order) {goto mK2MG;}goto Uhwok;KQCHU:$prefix = $arrInit['prefix'];goto GJx13;vtRzt:}function firstOrderProcess($Order){goto oHScG;wH6Rq:$Order->setCustomer($Customer);goto Hu8OW;jVpXA:Wolnh:goto pt8Zz;xzsUt:$Order->setOrderStatus($OrderStatus);goto gYpgL;VtsVx:waUNB:goto VM9wE;RdI_3:y3xp2:goto VM417;wM1hh:iwExe:goto Qiwb3;PgbaH:$mail = $Order->getEmail();goto teb5K;g01Lv:if (empty($arrAmazonCustomerParam['login_check_v2']) || $arrAmazonCustomerParam['login_check_v2'] == 'regist') {goto qs616;}goto owJ_H;jiogk:$Customers = $this->customerRepository->getNonWithdrawingCustomers(['v2_amazon_user_id' => $profile->buyerId]);goto QJi9F;QkxKb:        $mail_message = <<<__EOS__
************************************************
　会員登録情報
************************************************
マイページURL：{$url}
ログインメールアドレス：{$mail}
初期パスワード：{$password}

__EOS__;
goto MLYDm;teb5K:        $mail_message = <<<__EOS__
************************************************
　会員登録情報
************************************************
マイページURL：{$url}
※会員登録済みです。メールアドレスは{$mail}です。

__EOS__;
goto VtsVx;OmndK:$Customer = $this->customerRepository->findOneBy(['email' => $Order->getEmail()]);goto wH6Rq;batKP:logs('amazon_pay_v2')->info('[注文処理] 注文処理が完了しました.', [$Order->getId()]);goto TV_AH;TV_AH:logs('amazon_pay_v2')->info('[注文処理] 注文メールの送信を行います.', [$Order->getId()]);goto XASqU;gYpgL:$this->purchaseFlow->commit($Order, new PurchaseContext());goto oMz1G;oMz1G:if ($session_temp['IS_AUTHENTICATED_FULLY']) {goto Wolnh;}goto g01Lv;QJi9F:if (!(!$Customer->getV2AmazonUserId() && empty($Customers[0]))) {goto ELgRI;}goto lGgo7;ZAsME:ELgRI:goto C1iGU;v5D45:$amazonCheckoutSessionId = $session_temp[$this->sessionAmazonCheckoutSessionIdKey];goto ks0jg;C1iGU:pX0G3:goto vV2Mj;tf6pW:$Customer = $this->customerRepository->findOneBy(['email' => $arrAmazonCustomerParam['amazon_login_email_v2']]);goto ap2uq;oHScG:$this->entityManager->beginTransaction();goto hqprx;ejl_o:$session_temp = unserialize($Order->getAmazonPayV2SessionTemp());goto x6VgH;Hu8OW:$mail = $Customer->getEmail();goto QkxKb;RLpl9:goto pX0G3;goto jVpXA;c1plU:$profile = $session_temp[$this->sessionAmazonProfileKey];goto v5D45;hqprx:$this->entityManager->lock($Order, LockMode::PESSIMISTIC_WRITE);goto ejl_o;MLYDm:goto waUNB;goto VfSCV;pt8Zz:$Customer = $Order->getCustomer();goto jiogk;Qiwb3:goto DoKhL;goto VwJIN;VwJIN:qs616:goto pzMFJ;VM9wE:$Order->setCompleteMailMessage($mail_message);goto BclFf;wMKCe:$OrderStatus = $this->orderStatusRepository->find(OrderStatus::NEW);goto xzsUt;e3Hko:DoKhL:goto RLpl9;BclFf:yPZZj:goto e3Hko;W6GZT:$Customers = $this->customerRepository->getNonWithdrawingCustomers(['v2_amazon_user_id' => $profile->buyerId]);goto jvVqX;lGgo7:$Customer->setV2AmazonUserId($profile->buyerId);goto ZAsME;pzMFJ:if (!$arrAmazonCustomerParam['customer_regist_v2']) {goto yPZZj;}goto TJxs4;GuXfO:$Order->appendCompleteMailMessage("特記事項：" . $this->Config->getMailNotices());goto RdI_3;i388L:z0Kc9:goto wM1hh;D5ind:if ($this->customerRepository->getNonWithdrawingCustomers(['email' => $Order->getEmail()]) || $this->customerRepository->getNonWithdrawingCustomers(['v2_amazon_user_id' => $profile->buyerId])) {goto y9KXk;}goto Xtm_J;D1hbH:$this->entityManager->commit();goto batKP;xlda5:logs('amazon_pay_v2')->info('購入処理完了', [$Order->getId()]);goto FlsI0;VM417:$this->mailService->sendOrderMail($Order);goto ls2AL;XASqU:if (is_null($this->Config->getMailNotices())) {goto y3xp2;}goto GuXfO;ls2AL:$this->entityManager->flush();goto xlda5;ap2uq:$Order->setCustomer($Customer);goto reZfC;cyPxC:$this->amazonOrderHelper->setAmazonOrder($Order, $response->chargePermissionId, $response->chargeId);goto wMKCe;VfSCV:y9KXk:goto PgbaH;vV2Mj:$Order->setAmazonPayV2SessionTemp(null);goto EIzX2;EIzX2:$this->entityManager->flush();goto D1hbH;ks0jg:$response = $this->amazonOrderHelper->completeCheckout($Order, $amazonCheckoutSessionId);goto cyPxC;reZfC:$this->amazonOrderHelper->copyToOrderFromCustomer($Order, $Customer);goto W6GZT;Xtm_J:$password = $this->amazonOrderHelper->registCustomer($Order, $arrAmazonCustomerParam['mail_magazine'], $profile);goto OmndK;jvVqX:if (!(!$Customer->getV2AmazonUserId() && empty($Customers[0]))) {goto z0Kc9;}goto AMZfY;TJxs4:$url = $this->container->get('router')->generate('mypage_login', [], UrlGeneratorInterface::ABSOLUTE_URL);goto D5ind;x6VgH:$arrAmazonCustomerParam = $session_temp[$this->sessionAmazonCustomerParamKey];goto c1plU;AMZfY:$Customer->setV2AmazonUserId($profile->buyerId);goto i388L;owJ_H:if (!($arrAmazonCustomerParam['login_check_v2'] == 'login')) {goto iwExe;}goto tf6pW;FlsI0:}}