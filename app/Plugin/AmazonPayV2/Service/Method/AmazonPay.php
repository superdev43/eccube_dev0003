<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.3   |
    |              on 2021-07-20 10:45:27              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
namespace Plugin\AmazonPayV2\Service\Method;use Plugin\AmazonPayV2\Service\AmazonOrderHelper;use Plugin\AmazonPayV2\Service\AmazonRequestService;use Eccube\Entity\Master\OrderStatus;use Eccube\Entity\Order;use Eccube\Repository\Master\OrderStatusRepository;use Eccube\Repository\ProductClassRepository;use Eccube\Service\Payment\PaymentMethodInterface;use Eccube\Service\Payment\PaymentResult;use Eccube\Service\PurchaseFlow\PurchaseContext;use Eccube\Service\PurchaseFlow\PurchaseFlow;use Symfony\Component\Form\FormInterface;class AmazonPay implements PaymentMethodInterface{public function __construct(OrderStatusRepository $orderStatusRepository, ProductClassRepository $productClassRepository, PurchaseFlow $shoppingPurchaseFlow, AmazonOrderHelper $amazonOrderHelper, AmazonRequestService $amazonRequestService){goto pcA6Z;tl9b7:$this->productClassRepository = $productClassRepository;goto kYxfh;kYxfh:$this->purchaseFlow = $shoppingPurchaseFlow;goto Y2hHB;Y2hHB:$this->amazonOrderHelper = $amazonOrderHelper;goto u0vJt;u0vJt:$this->amazonRequestService = $amazonRequestService;goto V20Gl;pcA6Z:$this->orderStatusRepository = $orderStatusRepository;goto tl9b7;V20Gl:}public function verify(){return false;}public function apply(){goto fCSBz;s05F4:return false;goto Fp2O8;JgdFt:$this->Order->setOrderStatus($OrderStatus);goto s05F4;DCPf2:$OrderStatus = $this->orderStatusRepository->find(OrderStatus::PENDING);goto JgdFt;fCSBz:$this->purchaseFlow->prepare($this->Order, new PurchaseContext());goto DCPf2;Fp2O8:}public function checkout(){goto QE5vA;GqKva:$this->purchaseFlow->commit($this->Order, new PurchaseContext());goto O4K27;O4K27:$result = new PaymentResult();goto AIefO;xJtEA:$this->amazonOrderHelper->setAmazonOrder($this->Order, $response->chargePermissionId, $response->chargeId);goto GqKva;J7vwv:return $result;goto JF18Q;QE5vA:$response = $this->amazonOrderHelper->completeCheckout($this->Order, $this->amazonCheckoutSessionId);goto xJtEA;AIefO:$result->setSuccess(true);goto J7vwv;JF18Q:}public function setFormType(FormInterface $form){}public function setOrder(Order $Order){$this->Order = $Order;}public function setAmazonCheckoutSessionId($amazonCheckoutSessionId){$this->amazonCheckoutSessionId = $amazonCheckoutSessionId;}}